{
  "node_type": "nodes-base.koBoToolbox",
  "display_name": "KoBoToolbox",
  "description": "Work with KoBoToolbox forms and submissions",
  "category": "transform",
  "development_style": "programmatic",
  "package_name": "n8n-nodes-base",
  "version": "1",
  "is_ai_tool": true,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": false,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: KoboToolbox node documentation\ndescription: Learn how to use the KoboToolbox node in n8n. Follow technical documentation to integrate KoboToolbox node into your workflows.\ncontentType: [integration, reference]\n---\n\n# KoboToolbox node\n\nUse the KoboToolbox node to automate work in KoboToolbox, and integrate KoboToolbox with other applications. n8n has built-in support for a wide range of KoboToolbox features, including creating, updating, deleting, and getting files, forms, hooks, and submissions. \n\nOn this page, you'll find a list of operations the KoboToolbox node supports and links to more resources.\n\n/// note | Credentials\nRefer to [KoboToolbox credentials](/integrations/builtin/credentials/kobotoolbox.md) for guidance on setting up authentication. \n///\n\n## Operations\n\n* File\n\t* Create\n\t* Delete\n\t* Get\n\t* Get Many\n* Form\n    * Get\n    * Get Many\n\t\t* Redeploy\n* Hook\n    * Get\n    * Get Many\n    * Logs\n    * Retry All\n    * Retry One\n* Submission\n    * Delete\n    * Get\n    * Get Many\n    * Get Validation Status\n    * Update Validation Status\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'kobotoolbox') ]]\n\n## Options\n\n### Query Options\n\nThe Query Submission operation supports query options:\n\n* In the main section of the **Parameters** panel:\n    * **Start** controls the index offset to start the query from (to use the API pagination logic).\n    * **Limit** sets the maximum number of records to return. Note that the API always has a limit of 30,000 returned records, whatever value you provide.\n* In the **Query Options** section, you can activate the following parameters:\n    * **Query** lets you specify filter predicates in MongoDB's JSON query format. For example: `{\"status\": \"success\", \"_submission_time\": {\"$lt\": \"2021-11-01T01:02:03\"}}` queries for all submissions with the value `success` for the field `status`, and submitted before November 1st, 2021, 01:02:03.\n    * **Fields** lets you specify the list of fields you want to fetch, to make the response lighter.\n    * **Sort** lets you provide a list of sorting criteria in MongoDB JSON format. For example, `{\"status\": 1, \"_submission_time\": -1}` specifies a sort order by ascending status, and then descending submission time.\n\nMore details about these options can be found in the [Formhub API docs](https://github.com/SEL-Columbia/formhub/wiki/Formhub-Access-Points-(API)#api-parameters)\n\n### Submission options\n\nAll operations that return form submission data offer options to tweak the response. These include:\n\n- Download options lets you download any attachment linked to each particular form submissions, such as pictures and videos. It also lets you select the naming pattern, and the file size to download (if available - typically for images). \n- Formatting options perform some reformatting as described in [About reformatting](#about-reformatting).\n\n#### About reformatting\n\nThe default JSON format for KoboToolbox submission data is sometimes hard to deal with, because it's not schema-aware, and all fields are therefore returned as strings.\n\nThis node provides a lightweight opinionated reformatting logic, enabled with the **Reformat?** parameter, available on all operations that return form submissions: the submission query, get, and the attachment download operations.\n\nWhen enabled, the reformatting:\n\n- Reorganizes the JSON into a multi-level hierarchy following the form's groups. By default, question grouping hierarchy is materialized by a `/` character in the field names, for example `Group1/Question1`. With reformatting enabled, n8n reorganizes these into `Group1.Question1`, as nested JSON objects.\n- Renames fields to trim `_` (not supported by many downstream systems).\n- Parses all geospatial fields (Point, Line, and Area question types) into their standard GeoJSON equivalent.\n- Splits all fields matching any of the **Multiselect Mask** wildcard masks into an array. Since the multi-select fields appear as space-separated strings, they can't be guessed algorithmically, so you must provide a field naming mask. Format the masks as a comma-separated list. Lists support the `*` wildcard.\n- Converts all fields matching any of the **Number Mask** wildcard masks into a JSON float.\n\nHere's a detailed example in JSON:\n\n```json\n{\n  \"_id\": 471987,\n  \"formhub/uuid\": \"189436bb09a54957bfcc798e338b54d6\",\n  \"start\": \"2021-12-05T16:13:38.527+02:00\",\n  \"end\": \"2021-12-05T16:15:33.407+02:00\",\n  \"Field_Details/Field_Name\": \"Test Fields\",\n  \"Field_Details/Field_Location\": \"-1.932914 30.078211 1421 165\",\n  \"Field_Details/Field_Shape\": \"-1.932914 30.078211 1421 165;-1.933011 30.078085 0 0;-1.933257 30.078004 0 0;-1.933338 30.078197 0 0;-1.933107 30.078299 0 0;-1.932914 30.078211 1421 165\",\n  \"Field_Details/Crops_Grown\": \"maize beans avocado\",\n  \"Field_Details/Field_Size_sqm\": \"2300\",\n  \"__version__\": \"veGcULpqP6JNFKRJbbMvMs\",\n  \"meta/instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"_xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n  \"_uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"_attachments\": [],\n  \"_status\": \"submitted_via_web\",\n  \"_geolocation\": [\n    -1.932914,\n    30.078211\n  ],\n  \"_submission_time\": \"2021-12-05T14:15:44\",\n  \"_tags\": [],\n  \"_notes\": [],\n  \"_validation_status\": {},\n  \"_submitted_by\": null\n}\n```\n\nWith reformatting enabled, and the appropriate masks for multi-select and number formatting (for example, `Crops_*` and `*_sqm` respectively), n8n parses it into:\n\n```json\n{\n  \"id\": 471987,\n  \"formhub\": {\n    \"uuid\": \"189436bb09a54957bfcc798e338b54d6\"\n  },\n  \"start\": \"2021-12-05T16:13:38.527+02:00\",\n  \"end\": \"2021-12-05T16:15:33.407+02:00\",\n  \"Field_Details\": {\n    \"Field_Name\": \"Test Fields\",\n    \"Field_Location\": {\n      \"lat\": -1.932914,\n      \"lon\": 30.078211\n    },\n    \"Field_Shape\": {\n      \"type\": \"polygon\",\n      \"coordinates\": [\n        {\n          \"lat\": -1.932914,\n          \"lon\": 30.078211\n        },\n        {\n          \"lat\": -1.933011,\n          \"lon\": 30.078085\n        },\n        {\n          \"lat\": -1.933257,\n          \"lon\": 30.078004\n        },\n        {\n          \"lat\": -1.933338,\n          \"lon\": 30.078197\n        },\n        {\n          \"lat\": -1.933107,\n          \"lon\": 30.078299\n        },\n        {\n          \"lat\": -1.932914,\n          \"lon\": 30.078211\n        }\n      ]\n    },\n    \"Crops_Grown\": [\n      \"maize\",\n      \"beans\",\n      \"avocado\"\n    ],\n    \"Field_Size_sqm\": 2300\n  },\n  \"version\": \"veGcULpqP6JNFKRJbbMvMs\",\n  \"meta\": {\n    \"instanceID\": \"uuid:2356cbbe-c1fd-414d-85c8-84f33e92618a\"\n  },\n  \"xform_id_string\": \"ajXVJpBkTD5tB4Nu9QXpgm\",\n  \"uuid\": \"2356cbbe-c1fd-414d-85c8-84f33e92618a\",\n  \"attachments\": [],\n  \"status\": \"submitted_via_web\",\n  \"geolocation\": {\n    \"lat\": -1.932914,\n    \"lon\": 30.078211\n  },\n  \"submission_time\": \"2021-12-05T14:15:44\",\n  \"tags\": [],\n  \"notes\": [],\n  \"validation_status\": {},\n  \"submitted_by\": null\n}\n```\n\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/operation-not-supported.md\"\n",
  "properties_schema": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "submission",
      "options": [
        {
          "name": "File",
          "value": "file"
        },
        {
          "name": "Form",
          "value": "form"
        },
        {
          "name": "Hook",
          "value": "hook"
        },
        {
          "name": "Submission",
          "value": "submission"
        }
      ],
      "required": true,
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "get",
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get a form",
          "action": "Get a form"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many forms",
          "action": "Get many forms"
        },
        {
          "name": "Redeploy",
          "value": "redeploy",
          "description": "Redeploy Current Form Version",
          "action": "Redeploy Current Form Version"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form Name or ID",
      "name": "formId",
      "type": "options",
      "default": "",
      "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "get",
            "redeploy"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "loadForms"
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 1000,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "maxValue": 3000
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Sort",
          "name": "sort",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": false
          },
          "default": {},
          "placeholder": "Add Sort",
          "options": [
            {
              "displayName": "Sort",
              "name": "value",
              "values": [
                {
                  "displayName": "Descending",
                  "name": "descending",
                  "type": "boolean",
                  "default": true,
                  "description": "Whether to sort by descending order"
                },
                {
                  "displayName": "Order By",
                  "name": "ordering",
                  "type": "options",
                  "default": "date_modified",
                  "options": [
                    {
                      "name": "Asset Type",
                      "value": "asset_type"
                    },
                    {
                      "name": "Date Modified",
                      "value": "date_modified"
                    },
                    {
                      "name": "Name",
                      "value": "name"
                    },
                    {
                      "name": "Owner Username",
                      "value": "owner__username"
                    },
                    {
                      "name": "Subscribers Count",
                      "value": "subscribers_count"
                    }
                  ],
                  "description": "Field to order by"
                }
              ]
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Filters",
      "name": "filters",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Filter",
          "name": "filter",
          "type": "string",
          "default": "asset_type:survey",
          "description": "A text search query based on form data - e.g. \"owner__username:meg AND name__icontains:quixotic\" - see <a href=\"https://github.com/kobotoolbox/kpi#searching\" target=\"_blank\">docs</a> for more details"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get a single hook definition",
          "action": "Get a hook"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "List many hooks on a form",
          "action": "Get Many hooks"
        },
        {
          "name": "Logs",
          "value": "getLogs",
          "description": "Get hook logs",
          "action": "Get Logs for a hook"
        },
        {
          "name": "Retry All",
          "value": "retryAll",
          "description": "Retry all failed attempts for a given hook",
          "action": "Retry All hooks"
        },
        {
          "name": "Retry One",
          "value": "retryOne",
          "description": "Retry a specific hook",
          "action": "Retry One hook"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form Name or ID",
      "name": "formId",
      "type": "options",
      "default": "",
      "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "get",
            "retryOne",
            "retryAll",
            "getLogs",
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "loadForms"
      }
    },
    {
      "displayName": "Hook ID",
      "name": "hookId",
      "type": "string",
      "default": "",
      "description": "Hook ID (starts with h, e.g. hVehywQ2oXPYGHJHKtqth4)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "get",
            "retryOne",
            "retryAll",
            "getLogs"
          ]
        }
      }
    },
    {
      "displayName": "Hook Log ID",
      "name": "logId",
      "type": "string",
      "default": "",
      "description": "Hook log ID (starts with hl, e.g. hlSbGKaUKzTVNoWEVMYbLHe)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "retryOne"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 1000,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "maxValue": 3000
      }
    },
    {
      "displayName": "Log Status",
      "name": "status",
      "type": "options",
      "default": "",
      "description": "Only retrieve logs with a specific status",
      "options": [
        {
          "name": "All",
          "value": ""
        },
        {
          "name": "Failed",
          "value": "0"
        },
        {
          "name": "Pending",
          "value": "1"
        },
        {
          "name": "Success",
          "value": "2"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "getLogs"
          ]
        }
      }
    },
    {
      "displayName": "Start Date",
      "name": "startDate",
      "type": "dateTime",
      "default": "",
      "description": "Minimum date for the hook log to retrieve",
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "getLogs"
          ]
        }
      }
    },
    {
      "displayName": "End Date",
      "name": "endDate",
      "type": "dateTime",
      "default": "",
      "description": "Maximum date for the hook log to retrieve",
      "displayOptions": {
        "show": {
          "resource": [
            "hook"
          ],
          "operation": [
            "getLogs"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a single submission",
          "action": "Delete a submission"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a single submission",
          "action": "Get a submission"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many submissions",
          "action": "Get many submissions"
        },
        {
          "name": "Get Validation Status",
          "value": "getValidation",
          "description": "Get the validation status for the submission",
          "action": "Get the validation status for a submission"
        },
        {
          "name": "Update Validation Status",
          "value": "setValidation",
          "description": "Set the validation status of the submission",
          "action": "Update the validation status for a submission"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form Name or ID",
      "name": "formId",
      "type": "options",
      "default": "",
      "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "get",
            "delete",
            "getValidation",
            "setValidation",
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "loadForms"
      }
    },
    {
      "displayName": "Submission ID",
      "name": "submissionId",
      "type": "string",
      "default": "",
      "description": "Submission ID (number, e.g. 245128)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "get",
            "delete",
            "getValidation",
            "setValidation"
          ]
        }
      }
    },
    {
      "displayName": "Validation Status",
      "name": "validationStatus",
      "type": "options",
      "default": "",
      "description": "Desired Validation Status",
      "options": [
        {
          "name": "Approved",
          "value": "validation_status_approved"
        },
        {
          "name": "Not Approved",
          "value": "validation_status_not_approved"
        },
        {
          "name": "On Hold",
          "value": "validation_status_on_hold"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "setValidation"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "maxValue": 3000
      }
    },
    {
      "displayName": "Filter",
      "name": "filterType",
      "type": "options",
      "default": "none",
      "options": [
        {
          "name": "None",
          "value": "none"
        },
        {
          "name": "JSON",
          "value": "json"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "See <a href=\"https://github.com/SEL-Columbia/formhub/wiki/Formhub-Access-Points-(API)#api-parameters\" target=\"_blank\">Formhub API docs</a> to creating filters, using the MongoDB JSON format - e.g. {\"_submission_time\":{\"$lt\":\"2021-10-01T01:02:03\"}}",
      "name": "jsonNotice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "getAll"
          ],
          "filterType": [
            "json"
          ]
        }
      }
    },
    {
      "displayName": "Filters (JSON)",
      "name": "filterJson",
      "type": "string",
      "default": "",
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "getAll"
          ],
          "filterType": [
            "json"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Download Attachments",
          "name": "download",
          "type": "boolean",
          "default": false,
          "description": "Whether to download submitted attachments"
        },
        {
          "displayName": "Attachments Naming Scheme",
          "name": "binaryNamingScheme",
          "type": "options",
          "default": "sequence",
          "displayOptions": {
            "show": {
              "download": [
                true
              ]
            }
          },
          "options": [
            {
              "name": "Sequence (e.g. attachment_N)",
              "value": "sequence"
            },
            {
              "name": "Use Original Form Question ID",
              "value": "question"
            }
          ]
        },
        {
          "displayName": "Attachments Prefix",
          "name": "dataPropertyAttachmentsPrefixName",
          "type": "string",
          "displayOptions": {
            "show": {
              "download": [
                true
              ],
              "binaryNamingScheme": [
                "sequence"
              ]
            }
          },
          "default": "attachment_",
          "description": "Prefix for name of the binary property to which to write the attachments. An index starting with 0 will be added. So if name is \"attachment_\" the first attachment is saved to \"attachment_0\""
        },
        {
          "displayName": "Fields to Retrieve",
          "name": "fields",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of fields to retrieve (e.g. _submission_time,_submitted_by). If left blank, all fields are retrieved."
        },
        {
          "displayName": "File Size",
          "name": "version",
          "type": "options",
          "displayOptions": {
            "show": {
              "download": [
                true
              ]
            }
          },
          "default": "download_url",
          "description": "Attachment size to retrieve, if multiple versions are available",
          "options": [
            {
              "name": "Original",
              "value": "download_url"
            },
            {
              "name": "Small",
              "value": "download_small_url"
            },
            {
              "name": "Medium",
              "value": "download_medium_url"
            },
            {
              "name": "Large",
              "value": "download_large_url"
            }
          ]
        },
        {
          "displayName": "Multiselect Mask",
          "name": "selectMask",
          "type": "string",
          "default": "select_*",
          "description": "Comma-separated list of wildcard-style selectors for fields that should be treated as multiselect fields, i.e. parsed as arrays."
        },
        {
          "displayName": "Number Mask",
          "name": "numberMask",
          "type": "string",
          "default": "n_*, f_*",
          "description": "Comma-separated list of wildcard-style selectors for fields that should be treated as numbers"
        },
        {
          "displayName": "Reformat",
          "name": "reformat",
          "type": "boolean",
          "default": false,
          "description": "Whether to apply some reformatting to the submission data, such as parsing GeoJSON coordinates"
        },
        {
          "displayName": "Sort",
          "name": "sort",
          "type": "json",
          "default": "",
          "description": "Sort predicates, in MongoDB JSON format (e.g. {\"_submission_time\":1})"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "submission"
          ],
          "operation": [
            "get",
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "get",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a file",
          "action": "Create a file"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete file",
          "action": "Delete a file"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a file content",
          "action": "Get a file content"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many files",
          "action": "Get many files"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form Name or ID",
      "name": "formId",
      "type": "options",
      "default": "",
      "description": "Form ID (e.g. aSAvYreNzVEkrWg5Gdcvg). Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "loadForms"
      }
    },
    {
      "displayName": "File ID",
      "name": "fileId",
      "type": "string",
      "default": "",
      "description": "Uid of the file (should start with \"af\" e.g. \"afQoJxA4kmKEXVpkH6SYbhb\"",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "delete",
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the binary property to write the file into",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Download File Content",
      "name": "download",
      "type": "boolean",
      "default": false,
      "description": "Whether to download the file content into a binary property",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "File Upload Mode",
      "name": "fileMode",
      "type": "options",
      "default": "binary",
      "options": [
        {
          "name": "Binary File",
          "value": "binary"
        },
        {
          "name": "URL",
          "value": "url"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the binary property containing the file to upload. Supported types: image, audio, video, csv, xml, zip.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "create"
          ],
          "fileMode": [
            "binary"
          ]
        }
      }
    },
    {
      "displayName": "File URL",
      "name": "fileUrl",
      "type": "string",
      "default": "",
      "description": "HTTP(s) link to the file to upload",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "create"
          ],
          "fileMode": [
            "url"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "get",
      "name": "Get",
      "description": "Get a form"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Get many forms"
    },
    {
      "operation": "redeploy",
      "name": "Redeploy",
      "description": "Redeploy Current Form Version"
    }
  ],
  "credentials_required": [
    {
      "name": "koBoToolboxApi",
      "required": true
    }
  ],
  "generated_at": "2025-07-23T02:24:21.950Z",
  "api_version": "1.0.0"
}