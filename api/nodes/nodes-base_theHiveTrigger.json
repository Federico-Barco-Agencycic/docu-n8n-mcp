{
  "node_type": "nodes-base.theHiveTrigger",
  "display_name": "TheHive Trigger",
  "description": "Starts the workflow when TheHive events occur",
  "category": "trigger",
  "development_style": "programmatic",
  "package_name": "n8n-nodes-base",
  "version": "2",
  "is_ai_tool": false,
  "is_trigger": true,
  "is_webhook": true,
  "is_versioned": true,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: TheHive Trigger node documentation\ndescription: Learn how to use the TheHive Trigger node in n8n. Follow technical documentation to integrate TheHive Trigger node into your workflows.\ncontentType: [integration, reference]\n---\n\n# TheHive Trigger node\n\nOn this page, you'll find a list of events the TheHive Trigger node can respond to and links to more resources.\n\n/// note | TheHive and TheHive 5\nn8n provides two nodes for TheHive. Use this node (TheHive Trigger) if you want to use TheHive's version 3 or 4 API. If you want to use version 5, use [TheHive 5 Trigger](/integrations/builtin/trigger-nodes/n8n-nodes-base.thehive5trigger.md).\n///\n\n///  note  | Examples and templates\nFor usage examples and templates to help you get started, refer to n8n's [TheHive Trigger integrations](https://n8n.io/integrations/thehive-trigger/){:target=_blank .external-link} page.\n///\n\n## Events\n\n* Alert \n\t* Created\n\t* Deleted\n\t* Updated\n* Case\n\t* Created\n\t* Deleted\n\t* Updated\n* Log\n\t* Created\n\t* Deleted\n\t* Updated\n* Observable\n\t* Created\n\t* Deleted\n\t* Updated\n* Task\n\t* Created\n\t* Deleted\n\t* Updated\n\n## Related resources\n\nn8n provides an app node for TheHive. You can find the node docs [here](/integrations/builtin/app-nodes/n8n-nodes-base.thehive.md).\n\nView [example workflows and related content](https://n8n.io/integrations/thehive-trigger/){:target=_blank .external-link} on n8n's website.\n\nRefer to TheHive's documentation for more information about the service:\n\n* [Version 3](https://docs.thehive-project.org/thehive/legacy/thehive3/api/){:target=_blank .external-link}\n* [Version 4](https://docs.thehive-project.org/cortex/api/api-guide/){:target=_blank .external-link}\n\n\n## Configure a webhook in TheHive\n\nTo configure the webhook for your TheHive instance:\n\n1. Copy the testing and production webhook URLs from TheHive Trigger node.\n2. Add the following lines to the `application.conf` file. This is TheHive configuration file:\n\n\t```\n\tnotification.webhook.endpoints = [\n\t\t{\n\t\t\tname: TESTING_WEBHOOK_NAME\n\t\t\turl: TESTING_WEBHOOK_URL\n\t\t\tversion: 0\n\t\t\twsConfig: {}\n\t\t\tincludedTheHiveOrganisations: [\"ORGANIZATION_NAME\"]\n\t\t\texcludedTheHiveOrganisations: []\n\t\t},\n\t\t{\n\t\t\tname: PRODUCTION_WEBHOOK_NAME\n\t\t\turl: PRODUCTION_WEBHOOK_URL\n\t\t\tversion: 0\n\t\t\twsConfig: {}\n\t\t\tincludedTheHiveOrganisations: [\"ORGANIZATION_NAME\"]\n\t\t\texcludedTheHiveOrganisations: []\n\t\t}\n\t]\n\t```\n\n3. Replace `TESTING_WEBHOOK_URL` and `PRODUCTION_WEBHOOK_URL` with the URLs you copied in the previous step.\n4. Replace `TESTING_WEBHOOK_NAME` and `PRODUCTION_WEBHOOK_NAME` with your preferred endpoint names.\n5. Replace `ORGANIZATION_NAME` with your organization name.\n6. Execute the following cURL command to enable notifications:\n\t```sh\n\tcurl -XPUT -uTHEHIVE_USERNAME:THEHIVE_PASSWORD -H 'Content-type: application/json' THEHIVE_URL/api/config/organisation/notification -d '\n\t{\n\t\t\"value\": [\n\t\t\t{\n\t\t\t\"delegate\": false,\n\t\t\t\"trigger\": { \"name\": \"AnyEvent\"},\n\t\t\t\"notifier\": { \"name\": \"webhook\", \"endpoint\": \"TESTING_WEBHOOK_NAME\" }\n\t\t\t},\n\t\t\t{\n\t\t\t\"delegate\": false,\n\t\t\t\"trigger\": { \"name\": \"AnyEvent\"},\n\t\t\t\"notifier\": { \"name\": \"webhook\", \"endpoint\": \"PRODUCTION_WEBHOOK_NAME\" }\n\t\t\t}\n\t\t]\n\t}'\n\t```\n",
  "properties_schema": [
    {
      "displayName": "You must set up the webhook in TheHive â€” instructions <a href=\"https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.thehivetrigger/#configure-a-webhook-in-thehive\" target=\"_blank\">here</a>",
      "name": "notice",
      "type": "notice",
      "default": ""
    },
    {
      "displayName": "Events",
      "name": "events",
      "type": "multiOptions",
      "default": [],
      "description": "Events types",
      "options": [
        {
          "name": "*",
          "value": "*",
          "description": "Any time any event is triggered (Wildcard Event)"
        },
        {
          "name": "Alert Created",
          "value": "alert_create",
          "description": "Triggered when an alert is created"
        },
        {
          "name": "Alert Deleted",
          "value": "alert_delete",
          "description": "Triggered when an alert is deleted"
        },
        {
          "name": "Alert Updated",
          "value": "alert_update",
          "description": "Triggered when an alert is updated"
        },
        {
          "name": "Case Created",
          "value": "case_create",
          "description": "Triggered when a case is created"
        },
        {
          "name": "Case Deleted",
          "value": "case_delete",
          "description": "Triggered when a case is deleted"
        },
        {
          "name": "Case Updated",
          "value": "case_update",
          "description": "Triggered when a case is updated"
        },
        {
          "name": "Log Created",
          "value": "case_task_log_create",
          "description": "Triggered when a task log is created"
        },
        {
          "name": "Log Deleted",
          "value": "case_task_log_delete",
          "description": "Triggered when a task log is deleted"
        },
        {
          "name": "Log Updated",
          "value": "case_task_log_update",
          "description": "Triggered when a task log is updated"
        },
        {
          "name": "Observable Created",
          "value": "case_artifact_create",
          "description": "Triggered when an observable is created"
        },
        {
          "name": "Observable Deleted",
          "value": "case_artifact_delete",
          "description": "Triggered when an observable is deleted"
        },
        {
          "name": "Observable Updated",
          "value": "case_artifact_update",
          "description": "Triggered when an observable is updated"
        },
        {
          "name": "Task Created",
          "value": "case_task_create",
          "description": "Triggered when a task is created"
        },
        {
          "name": "Task Deleted",
          "value": "case_task_delete",
          "description": "Triggered when a task is deleted"
        },
        {
          "name": "Task Updated",
          "value": "case_task_update",
          "description": "Triggered when a task is updated"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "@version": [
            1
          ]
        }
      }
    },
    {
      "displayName": "Events",
      "name": "events",
      "type": "multiOptions",
      "default": [],
      "description": "Events types",
      "options": [
        {
          "name": "*",
          "value": "*",
          "description": "Any time any event is triggered (Wildcard Event)"
        },
        {
          "name": "Alert Created",
          "value": "alert_create",
          "description": "Triggered when an alert is created"
        },
        {
          "name": "Alert Deleted",
          "value": "alert_delete",
          "description": "Triggered when an alert is deleted"
        },
        {
          "name": "Alert Updated",
          "value": "alert_update",
          "description": "Triggered when an alert is updated"
        },
        {
          "name": "Case Created",
          "value": "case_create",
          "description": "Triggered when a case is created"
        },
        {
          "name": "Case Deleted",
          "value": "case_delete",
          "description": "Triggered when a case is deleted"
        },
        {
          "name": "Case Updated",
          "value": "case_update",
          "description": "Triggered when a case is updated"
        },
        {
          "name": "Log Created",
          "value": "case_task_log_create",
          "description": "Triggered when a task log is created"
        },
        {
          "name": "Log Deleted",
          "value": "case_task_log_delete",
          "description": "Triggered when a task log is deleted"
        },
        {
          "name": "Log Updated",
          "value": "case_task_log_update",
          "description": "Triggered when a task log is updated"
        },
        {
          "name": "Observable Created",
          "value": "case_artifact_create",
          "description": "Triggered when an observable is created"
        },
        {
          "name": "Observable Deleted",
          "value": "case_artifact_delete",
          "description": "Triggered when an observable is deleted"
        },
        {
          "name": "Observable Updated",
          "value": "case_artifact_update",
          "description": "Triggered when an observable is updated"
        },
        {
          "name": "Task Created",
          "value": "case_task_create",
          "description": "Triggered when a task is created"
        },
        {
          "name": "Task Updated",
          "value": "case_task_update",
          "description": "Triggered when a task is updated"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "@version": [
            2
          ]
        }
      }
    }
  ],
  "operations": [],
  "credentials_required": [],
  "generated_at": "2025-07-23T02:24:22.179Z",
  "api_version": "1.0.0"
}