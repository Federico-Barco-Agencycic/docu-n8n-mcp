{
  "node_type": "nodes-base.awsIam",
  "display_name": "AWS IAM",
  "description": "Interacts with Amazon IAM",
  "category": "output",
  "development_style": "programmatic",
  "package_name": "n8n-nodes-base",
  "version": "1",
  "is_ai_tool": false,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": false,
  "has_documentation": false,
  "documentation": null,
  "properties_schema": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "user",
      "options": [
        {
          "name": "User",
          "value": "user"
        },
        {
          "name": "Group",
          "value": "group"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Add to Group",
          "value": "addToGroup",
          "description": "Add an existing user to a group",
          "action": "Add user to group",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "AddUserToGroup",
                "Version": "2010-05-08",
                "UserName": "={{ $parameter[\"user\"] }}",
                "GroupName": "={{ $parameter[\"group\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new user",
          "action": "Create user",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "CreateUser",
                "Version": "2010-05-08",
                "UserName": "={{ $parameter[\"userName\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a user",
          "action": "Delete user",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "DeleteUser",
                "Version": "2010-05-08",
                "UserName": "={{ $parameter[\"user\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a user",
          "action": "Get user",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "GetUser",
                "Version": "2010-05-08",
                "UserName": "={{ $parameter[\"user\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "GetUserResponse.GetUserResult.User"
                  }
                },
                null
              ]
            }
          }
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Retrieve a list of users",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "ListUsers",
                "Version": "2010-05-08"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null,
                null
              ]
            }
          },
          "action": "Get many users"
        },
        {
          "name": "Remove From Group",
          "value": "removeFromGroup",
          "description": "Remove a user from a group",
          "action": "Remove user from group",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "RemoveUserFromGroup",
                "Version": "2010-05-08",
                "UserName": "={{ $parameter[\"user\"] }}",
                "GroupName": "={{ $parameter[\"group\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a user",
          "action": "Update user",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "UpdateUser",
                "Version": "2010-05-08",
                "NewUserName": "={{ $parameter[\"userName\"] }}",
                "UserName": "={{ $parameter[\"user\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the user you want to add to the group",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "addToGroup"
          ]
        }
      }
    },
    {
      "displayName": "Group",
      "name": "group",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the group you want to add the user to",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "addToGroup"
          ]
        }
      }
    },
    {
      "displayName": "User Name",
      "name": "userName",
      "type": "string",
      "default": "",
      "description": "The username of the new user to create",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "maxLength": 64,
        "regex": "^[A-Za-z0-9+=,\\.@_-]+$"
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Path",
          "name": "path",
          "type": "string",
          "validateType": "string",
          "default": "/",
          "description": "The path for the user name",
          "placeholder": "e.g. /division_abc/subdivision_xyz/",
          "routing": {
            "send": {
              "preSend": [
                null
              ],
              "property": "Path",
              "type": "query"
            }
          }
        },
        {
          "displayName": "Permissions Boundary",
          "name": "permissionsBoundary",
          "default": "",
          "description": "The ARN of the managed policy that is used to set the permissions boundary for the user",
          "placeholder": "e.g. arn:aws:iam::123456789012:policy/ExampleBoundaryPolicy",
          "type": "string",
          "validateType": "string",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            }
          }
        },
        {
          "displayName": "Tags",
          "name": "tags",
          "type": "fixedCollection",
          "description": "A list of tags that you want to attach to the new user",
          "default": [],
          "placeholder": "Add Tag",
          "typeOptions": {
            "multipleValues": true
          },
          "options": [
            {
              "name": "tags",
              "displayName": "Tag",
              "values": [
                {
                  "displayName": "Key",
                  "name": "key",
                  "type": "string",
                  "default": "",
                  "placeholder": "e.g., Department"
                },
                {
                  "displayName": "Value",
                  "name": "value",
                  "type": "string",
                  "default": "",
                  "placeholder": "e.g., Engineering"
                }
              ]
            }
          ],
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the user you want to delete",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the user you want to retrieve",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "hide": {
          "returnAll": [
            true
          ]
        },
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Path Prefix",
          "name": "pathPrefix",
          "type": "string",
          "validateType": "string",
          "default": "/",
          "description": "The path prefix for filtering the results",
          "placeholder": "e.g. /division_abc/subdivision_xyz/",
          "routing": {
            "send": {
              "preSend": [
                null
              ],
              "property": "PathPrefix",
              "value": "={{ $value }}"
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the user you want to update",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "User Name",
      "name": "userName",
      "type": "string",
      "default": "",
      "description": "The new name of the user",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "typeOptions": {
        "maxLength": 64,
        "regex": "^[A-Za-z0-9+=,\\.@_-]+$"
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Path",
          "name": "path",
          "type": "string",
          "validateType": "string",
          "default": "/",
          "placeholder": "e.g. /division_abc/subdivision_xyz/",
          "routing": {
            "send": {
              "preSend": [
                null
              ],
              "property": "NewPath",
              "type": "query"
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the user you want to remove from the group",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "removeFromGroup"
          ]
        }
      }
    },
    {
      "displayName": "Group",
      "name": "group",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the group you want to remove the user from",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "removeFromGroup"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "action": "Create group",
          "description": "Create a new group",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "CreateGroup",
                "Version": "2010-05-08",
                "GroupName": "={{ $parameter[\"groupName\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Delete",
          "value": "delete",
          "action": "Delete group",
          "description": "Delete an existing group",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "DeleteGroup",
                "Version": "2010-05-08",
                "GroupName": "={{ $parameter[\"group\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        },
        {
          "name": "Get",
          "value": "get",
          "action": "Get group",
          "description": "Retrieve details of an existing group",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "GetGroup",
                "Version": "2010-05-08",
                "GroupName": "={{ $parameter[\"group\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null,
                null
              ]
            }
          }
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "action": "Get many groups",
          "description": "Retrieve a list of groups",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "ListGroups",
                "Version": "2010-05-08"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null,
                null
              ]
            }
          }
        },
        {
          "name": "Update",
          "value": "update",
          "action": "Update group",
          "description": "Update an existing group",
          "routing": {
            "request": {
              "method": "POST",
              "url": "",
              "body": {
                "Action": "UpdateGroup",
                "Version": "2010-05-08",
                "GroupName": "={{ $parameter[\"group\"] }}",
                "NewGroupName": "={{ $parameter[\"groupName\"] }}"
              },
              "ignoreHttpStatusErrors": true
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Group Name",
      "name": "groupName",
      "type": "string",
      "default": "",
      "description": "The name of the new group to create",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "maxLength": 128,
        "regex": "^[+=,.@\\-_A-Za-z0-9]+$"
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Path",
          "name": "path",
          "type": "string",
          "validateType": "string",
          "default": "/",
          "placeholder": "e.g. /division_abc/engineering/",
          "description": "The path to the group, if it is not included, it defaults to a slash (/)",
          "routing": {
            "send": {
              "preSend": [
                null
              ],
              "property": "Path",
              "type": "query"
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Group",
      "name": "group",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the group you want to delete",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Group",
      "name": "group",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the group you want to retrieve",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Include Users",
      "name": "includeUsers",
      "type": "boolean",
      "default": false,
      "description": "Whether to include a list of users in the group",
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "hide": {
          "returnAll": [
            true
          ]
        },
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Include Users",
      "name": "includeUsers",
      "type": "boolean",
      "default": false,
      "description": "Whether to include a list of users in the group",
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Group",
      "name": "group",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the group you want to update",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Group Name",
      "name": "groupName",
      "type": "string",
      "default": "",
      "description": "The new name of the group",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "typeOptions": {
        "maxLength": 128,
        "regex": "^[+=,.@\\-_A-Za-z0-9]+$"
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Path",
          "name": "path",
          "type": "string",
          "validateType": "string",
          "default": "/",
          "placeholder": "e.g. /division_abc/engineering/",
          "description": "The new path to the group, if it is not included, it defaults to a slash (/)",
          "routing": {
            "send": {
              "preSend": [
                null
              ],
              "property": "NewPath",
              "type": "query"
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "group"
          ],
          "operation": [
            "update"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "addToGroup",
      "name": "Add to Group",
      "description": "Add an existing user to a group"
    },
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a new user"
    },
    {
      "operation": "delete",
      "name": "Delete",
      "description": "Delete a user"
    },
    {
      "operation": "get",
      "name": "Get",
      "description": "Retrieve a user"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Retrieve a list of users"
    },
    {
      "operation": "removeFromGroup",
      "name": "Remove From Group",
      "description": "Remove a user from a group"
    },
    {
      "operation": "update",
      "name": "Update",
      "description": "Update a user"
    }
  ],
  "credentials_required": [
    {
      "name": "aws",
      "required": true
    }
  ],
  "generated_at": "2025-07-23T02:24:21.744Z",
  "api_version": "1.0.0"
}