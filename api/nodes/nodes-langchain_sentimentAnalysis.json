{
  "node_type": "nodes-langchain.sentimentAnalysis",
  "display_name": "Sentiment Analysis",
  "description": "Analyze the sentiment of your text",
  "category": "transform",
  "development_style": "programmatic",
  "package_name": "@n8n/n8n-nodes-langchain",
  "version": "1.1",
  "is_ai_tool": false,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": true,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Sentiment Analysis node documentation\ndescription: Learn how to use the Sentiment Analysis node in n8n. Follow technical documentation to integrate Sentiment Analysis node into your workflows.\ncontentType: [integration, reference]\n---\n\n# Sentiment Analysis node\n\nUse the Sentiment Analysis node to analyze the sentiment of incoming text data.\n\nThe language model uses the [**Sentiment Categories**](#node-options) in the node options to determine each item's sentiment.\n\n## Node parameters\n\n* **Text to Analyze** defines the input text for sentiment analysis. This is an expression that references a field from the input items. For example, this could be \n`{{ $json.chatInput }}` if the input is from a chat or message source. By default, it expects a `text` field.\n\n## Node options\n\n* **Sentiment Categories**: Define the categories that you want to classify your input as.\n    * By default, these are `Positive, Neutral, Negative`. You can customize these categories to fit your specific use case, such as `Very Positive, Positive, Neutral, Negative, Very Negative` for more granular analysis.\n* **Include Detailed Results**: When turned on, this option includes sentiment strength and confidence scores in the output. Note that these scores are estimates generated by the language model and are rough indicators rather than precise measurements.\n* **System Prompt Template**: Use this option to change the system prompt that's used for the sentiment analysis. It uses the `{categories}` placeholder for the categories.\n* **Enable Auto-Fixing**: When enabled, the node automatically fixes model outputs to ensure they match the expected format. Do this by sending the schema parsing error to the LLM and asking it to fix it.\n\n## Usage Notes\n\n### Model Temperature Setting\n\nIt's strongly advised to set the temperature of the connected language model to 0 or a value close to 0. This helps ensure that the results are as deterministic as possible, providing more consistent and reliable sentiment analysis across multiple runs.\n\n### Language Considerations\n\nThe node's performance may vary depending on the language of the input text.\n\nFor best results, ensure your chosen language model supports the input language.\n\n### Processing Large Volumes\n\nWhen analyzing large amounts of text, consider splitting the input into smaller chunks to optimize processing time and resource usage.\n\n### Iterative Refinement\n\nFor complex sentiment analysis tasks, you may need to iteratively refine the system prompt and categories to achieve the desired results.\n\n## Example Usage\n\n### Basic Sentiment Analysis\n\n1. Connect a data source (for example, RSS Feed, HTTP Request) to the Sentiment Analysis node.\n2. Set the \"Text to Analyze\" field to the relevant item property (for example, `{{ $json.content }}` for blog post content).\n3. Keep the default sentiment categories.\n4. Connect the node's outputs to separate paths for processing positive, neutral, and negative sentiments differently.\n\n### Custom Category Analysis\n\n1. Change the **Sentiment Categories** to `Excited, Happy, Neutral, Disappointed, Angry`.\n2. Adjust your workflow to handle these five output categories.\n3. Use this setup to analyze customer feedback with more nuanced emotional categories.\n\n## Related resources\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/langchain-overview-link.md\"\n--8<-- \"_glossary/ai-glossary.md\"\n",
  "properties_schema": [
    {
      "displayName": "Text to Analyze",
      "name": "inputText",
      "type": "string",
      "default": "",
      "description": "Use an expression to reference data in previous nodes or enter static text",
      "required": true,
      "typeOptions": {
        "rows": 2
      }
    },
    {
      "displayName": "Sentiment scores are LLM-generated estimates, not statistically rigorous measurements. They may be inconsistent across runs and should be used as rough indicators only.",
      "name": "detailedResultsNotice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "/options.includeDetailedResults": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Sentiment Categories",
          "name": "categories",
          "type": "string",
          "default": "Positive, Neutral, Negative",
          "description": "A comma-separated list of categories to analyze",
          "noDataExpression": true,
          "typeOptions": {
            "rows": 2
          }
        },
        {
          "displayName": "System Prompt Template",
          "name": "systemPromptTemplate",
          "type": "string",
          "default": "You are highly intelligent and accurate sentiment analyzer. Analyze the sentiment of the provided text. Categorize it into one of the following: {categories}. Use the provided formatting instructions. Only output the JSON.",
          "description": "String to use directly as the system prompt template",
          "typeOptions": {
            "rows": 6
          }
        },
        {
          "displayName": "Include Detailed Results",
          "name": "includeDetailedResults",
          "type": "boolean",
          "default": false,
          "description": "Whether to include sentiment strength and confidence scores in the output"
        },
        {
          "displayName": "Enable Auto-Fixing",
          "name": "enableAutoFixing",
          "type": "boolean",
          "default": true,
          "description": "Whether to enable auto-fixing (may trigger an additional LLM call if output is broken)"
        },
        {
          "displayName": "Batch Processing",
          "name": "batching",
          "type": "collection",
          "placeholder": "Add Batch Processing Option",
          "description": "Batch processing options for rate limiting",
          "default": {},
          "options": [
            {
              "displayName": "Batch Size",
              "name": "batchSize",
              "default": 5,
              "type": "number",
              "description": "How many items to process in parallel. This is useful for rate limiting, but might impact the log output ordering."
            },
            {
              "displayName": "Delay Between Batches",
              "name": "delayBetweenBatches",
              "default": 0,
              "type": "number",
              "description": "Delay in milliseconds between batches. This is useful for rate limiting."
            }
          ],
          "displayOptions": {
            "show": {
              "@version": [
                {
                  "_cnd": {
                    "gte": 1.1
                  }
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "operations": [],
  "credentials_required": [],
  "generated_at": "2025-07-23T02:24:22.283Z",
  "api_version": "1.0.0"
}