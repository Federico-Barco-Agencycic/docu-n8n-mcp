{
  "node_type": "nodes-langchain.toolWorkflow",
  "display_name": "Call n8n Sub-Workflow Tool",
  "description": "Uses another n8n workflow as a tool. Allows packaging any n8n node(s) as a tool.",
  "category": "transform",
  "development_style": "programmatic",
  "package_name": "@n8n/n8n-nodes-langchain",
  "version": "2.2",
  "is_ai_tool": false,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": true,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Call n8n Workflow Tool node documentation\ndescription: Learn how to use the Call n8n Workflow Tool node in n8n. Follow technical documentation to integrate Call n8n Workflow Tool node into your workflows.\ncontentType: [integration, reference]\npriority: high\n---\n\n# Call n8n Workflow Tool node\n\nThe Call n8n Workflow Tool node is a [tool](/glossary.md#ai-tool) that allows an [agent](/glossary.md#ai-agent) to run another n8n workflow and fetch its output data. \n\nOn this page, you'll find the node parameters for the Call n8n Workflow Tool node, and links to more resources.\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/sub-node-expression-resolution.md\"\n\n## Node parameters\n\n### Description\n\nEnter a custom code a description. This tells the agent when to use this tool. For example:\n\n> Call this tool to get a random color. The input should be a string with comma separated names of colors to exclude.\n\n### Source\n\nTell n8n which workflow to call. You can choose either:\n\n* **Database** to select the workflow from a list or enter a workflow ID.\n* **Define Below** and copy in a complete [workflow JSON](/workflows/export-import.md).\n\n### Workflow Inputs\n\nWhen using **Database** as workflow source, once you choose a sub-workflow (and define the **Workflow Input Schema** in the sub-workflow), you can define the **Workflow Inputs**.\n\nSelect the **Refresh** button to pull in the input fields from the sub-workflow.\n\nYou can define the workflow input values using any combination of the following options:\n\n* providing fixed values\n* using expressions to reference data from the current workflow\n* [letting the AI model specify the parameter](/advanced-ai/examples/using-the-fromai-function.md) by selecting the button AI button on the right side of the field\n* using the [`$fromAI()` function](/advanced-ai/examples/using-the-fromai-function.md#use-the-fromai-function) in expressions to control the way the model fills in data and to mix AI generated input with other custom input\n\nTo reference data from the current workflow, drag fields from the input panel to the field with the Expressions mode selected.\n\nTo get started with the `$fromAI()` function, select the \"Let the model define this parameter\" button on the right side of the field and then use the **X** on the box to revert to user-defined values. The field will change to an expression field pre-populated with the `$fromAI()` expression. From here, you can customize the expression to add other static or dynamic content, or tweak the `$fromAI()` function parameters.\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'workflow-tool') ]]\n\n## Related resources\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/tools-link.md\"\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/langchain-overview-link.md\"\n--8<-- \"_glossary/ai-glossary.md\"\n",
  "properties_schema": [
    {
      "displayName": "This node must be connected to an AI agent. <a data-action='openSelectiveNodeCreator' data-action-parameter-creatorview='AI'>Insert one</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "typeOptions": {
        "containerClass": "ndv-connection-hint-notice"
      }
    },
    {
      "displayName": "See an example of a workflow to suggest meeting slots using AI <a href=\"/templates/1953\" target=\"_blank\">here</a>.",
      "name": "noticeTemplateExample",
      "type": "notice",
      "default": ""
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "description": "The name of the function to be called, could contain letters, numbers, and underscores only",
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "lte": 2.1
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "Description",
      "name": "description",
      "type": "string",
      "default": "",
      "typeOptions": {
        "rows": 3
      }
    },
    {
      "displayName": "This tool will call the workflow you define below, and look in the last node for the response. The workflow needs to start with an Execute Workflow trigger",
      "name": "executeNotice",
      "type": "notice",
      "default": ""
    },
    {
      "displayName": "Source",
      "name": "source",
      "type": "options",
      "default": "database",
      "description": "Where to get the workflow to execute from",
      "options": [
        {
          "name": "Database",
          "value": "database",
          "description": "Load the workflow from the database by ID"
        },
        {
          "name": "Define Below",
          "value": "parameter",
          "description": "Pass the JSON code of a workflow"
        }
      ]
    },
    {
      "displayName": "Workflow",
      "name": "workflowId",
      "type": "workflowSelector",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "source": [
            "database"
          ]
        }
      }
    },
    {
      "displayName": "Workflow Inputs",
      "name": "workflowInputs",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "displayOptions": {
        "show": {
          "source": [
            "database"
          ]
        },
        "hide": {
          "workflowId": [
            ""
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "workflowId.value"
        ],
        "resourceMapper": {
          "localResourceMapperMethod": "loadSubWorkflowInputs",
          "valuesLabel": "Workflow Inputs",
          "mode": "map",
          "fieldWords": {
            "singular": "workflow input",
            "plural": "workflow inputs"
          },
          "addAllFields": true,
          "multiKeyMatch": false,
          "supportAutoMap": false
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Workflow JSON",
      "name": "workflowJson",
      "type": "json",
      "default": "\n\n\n\n\n\n\n\n\n",
      "description": "The workflow JSON code to execute",
      "required": true,
      "displayOptions": {
        "show": {
          "source": [
            "parameter"
          ]
        }
      },
      "typeOptions": {
        "rows": 10
      }
    }
  ],
  "operations": [],
  "credentials_required": [],
  "generated_at": "2025-07-23T02:24:22.291Z",
  "api_version": "1.0.0"
}