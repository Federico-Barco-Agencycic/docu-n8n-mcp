{
  "node_type": "nodes-base.grist",
  "display_name": "Grist",
  "description": "Consume the Grist API",
  "category": "input",
  "development_style": "programmatic",
  "package_name": "n8n-nodes-base",
  "version": "1",
  "is_ai_tool": true,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": false,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Grist node documentation\ndescription: Learn how to use the Grist node in n8n. Follow technical documentation to integrate Grist node into your workflows.\ncontentType: [integration, reference]\n---\n\n# Grist node\n\nUse the Grist node to automate work in Grist, and integrate Grist with other applications. n8n has built-in support for a wide range of Grist features, including creating, updating, deleting, and reading rows in a table. \n\nOn this page, you'll find a list of operations the Grist node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Grist credentials](/integrations/builtin/credentials/grist.md) for guidance on setting up authentication. \n///\n\n## Operations\n\n* Create rows in a table\n* Delete rows from a table\n* Read rows from a table\n* Update rows in a table\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'grist') ]]\n\n## Get the Row ID\n\nTo update or delete a particular record, you need the Row ID. There are two ways to get the Row ID:\n\n**Create a Row ID column in Grist**\n\nCreate a new column in your Grist table with the formula `$id`.\n\n**Use the Get All operation**\n\nThe **Get All** operation returns the Row ID of each record along with the fields.\n \nYou can get it with the expression `{{$node[\"GristNodeName\"].json[\"id\"]}}`.\n\n\n## Filter records when using the Get All operation\n\n- Select **Add Option** and select **Filter** from the dropdown list.\n- You can add filters for any number of columns. The result will only include records which match all the columns.\n- For each column, you can enter any number of values separated by commas. The result will include records which match any of the values for that column.\n\n",
  "properties_schema": [
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Create Row",
          "value": "create",
          "description": "Create rows in a table",
          "action": "Create rows in a table"
        },
        {
          "name": "Delete Row",
          "value": "delete",
          "description": "Delete rows from a table",
          "action": "Delete rows from a table"
        },
        {
          "name": "Get Many Rows",
          "value": "getAll",
          "description": "Read rows from a table",
          "action": "Read rows from a table"
        },
        {
          "name": "Update Row",
          "value": "update",
          "description": "Update rows in a table",
          "action": "Update rows in a table"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Document ID",
      "name": "docId",
      "type": "string",
      "default": "",
      "description": "In your document, click your profile icon, then Document Settings, then copy the value under \"This document's ID\"",
      "required": true
    },
    {
      "displayName": "Table ID",
      "name": "tableId",
      "type": "string",
      "default": "",
      "description": "ID of table to operate on. If unsure, look at the Code View.",
      "required": true
    },
    {
      "displayName": "Row ID",
      "name": "rowId",
      "type": "string",
      "default": "",
      "description": "ID of the row to delete, or comma-separated list of row IDs to delete",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Additional Options",
      "name": "additionalOptions",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Filter",
          "name": "filter",
          "placeholder": "Add Filter",
          "description": "Only return rows matching all of the given filters. For complex filters, create a formula column and filter for the value \"true\".",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": true
          },
          "default": {},
          "options": [
            {
              "displayName": "Filter Properties",
              "name": "filterProperties",
              "values": [
                {
                  "displayName": "Column Name or ID",
                  "name": "field",
                  "type": "options",
                  "typeOptions": {
                    "loadOptionsDependsOn": [
                      "docId",
                      "tableId"
                    ],
                    "loadOptionsMethod": "getTableColumns"
                  },
                  "default": "",
                  "description": "Column to apply the filter in. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
                  "required": true
                },
                {
                  "displayName": "Values",
                  "name": "values",
                  "type": "string",
                  "default": "",
                  "description": "Comma-separated list of values to search for in the filtered column"
                }
              ]
            }
          ]
        },
        {
          "displayName": "Sort Order",
          "name": "sort",
          "placeholder": "Add Field",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": true
          },
          "default": {},
          "options": [
            {
              "displayName": "Sort Properties",
              "name": "sortProperties",
              "values": [
                {
                  "displayName": "Column Name or ID",
                  "name": "field",
                  "type": "options",
                  "typeOptions": {
                    "loadOptionsDependsOn": [
                      "docId",
                      "tableId"
                    ],
                    "loadOptionsMethod": "getTableColumns"
                  },
                  "default": "",
                  "required": true,
                  "description": "Column to sort on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
                },
                {
                  "displayName": "Direction",
                  "name": "direction",
                  "type": "options",
                  "options": [
                    {
                      "name": "Ascending",
                      "value": "asc"
                    },
                    {
                      "name": "Descending",
                      "value": "desc"
                    }
                  ],
                  "default": "asc",
                  "description": "Direction to sort in"
                }
              ]
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Row ID",
      "name": "rowId",
      "type": "string",
      "default": "",
      "description": "ID of the row to update",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Data to Send",
      "name": "dataToSend",
      "type": "options",
      "default": "defineInNode",
      "description": "Whether to insert the input data this node receives in the new row",
      "options": [
        {
          "name": "Auto-Map Input Data to Columns",
          "value": "autoMapInputs",
          "description": "Use when node input properties match destination column names"
        },
        {
          "name": "Define Below for Each Column",
          "value": "defineInNode",
          "description": "Set the value for each destination column"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Inputs to Ignore",
      "name": "inputsToIgnore",
      "type": "string",
      "default": "",
      "description": "List of input properties to avoid sending, separated by commas. Leave empty to send all properties.",
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ],
          "dataToSend": [
            "autoMapInputs"
          ]
        }
      }
    },
    {
      "displayName": "Fields to Send",
      "name": "fieldsToSend",
      "type": "fixedCollection",
      "default": {},
      "options": [
        {
          "displayName": "Properties",
          "name": "properties",
          "values": [
            {
              "displayName": "Column Name or ID",
              "name": "fieldId",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>",
              "type": "options",
              "typeOptions": {
                "loadOptionsDependsOn": [
                  "tableId"
                ],
                "loadOptionsMethod": "getTableColumns"
              },
              "default": ""
            },
            {
              "displayName": "Field Value",
              "name": "fieldValue",
              "type": "string",
              "default": ""
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ],
          "dataToSend": [
            "defineInNode"
          ]
        }
      },
      "typeOptions": {
        "multipleValueButtonText": "Add Field to Send",
        "multipleValues": true
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create Row",
      "description": "Create rows in a table"
    },
    {
      "operation": "delete",
      "name": "Delete Row",
      "description": "Delete rows from a table"
    },
    {
      "operation": "getAll",
      "name": "Get Many Rows",
      "description": "Read rows from a table"
    },
    {
      "operation": "update",
      "name": "Update Row",
      "description": "Update rows in a table"
    }
  ],
  "credentials_required": [
    {
      "name": "gristApi",
      "required": true,
      "testedBy": "gristApiTest"
    }
  ],
  "generated_at": "2025-07-23T02:24:21.901Z",
  "api_version": "1.0.0"
}