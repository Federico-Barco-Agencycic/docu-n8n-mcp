{
  "node_type": "nodes-base.adalo",
  "display_name": "Adalo",
  "description": "Consume Adalo API",
  "category": "transform",
  "development_style": "programmatic",
  "package_name": "n8n-nodes-base",
  "version": "1",
  "is_ai_tool": true,
  "is_trigger": false,
  "is_webhook": false,
  "is_versioned": false,
  "has_documentation": true,
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Adalo node documentation\ndescription: Learn how to use the Adalo node in n8n. Follow technical documentation to integrate Adalo node into your workflows.\ncontentType: [integration, reference]\npriority: medium\n---\n\n# Adalo node\n\nUse the Adalo node to automate work in Adalo, and integrate Adalo with other applications. n8n has built-in support for a wide range of Adalo features, including like creating, getting, updating and deleting databases, records, and collections.\n\nOn this page, you'll find a list of operations the Adalo node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Adalo credentials](/integrations/builtin/credentials/adalo.md) for guidance on setting up authentication. \n///\t\n\n## Operations\n\n* Collection\n\t* Create\n\t* Delete\n\t* Get\n\t* Get Many\n\t* Update\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'adalo') ]]\n\n## Related resources\n\nRefer to [Adalo's documentation](https://help.adalo.com/){:target=_blank .external-link} for more information on using Adalo. Their [External Collections with APIs](https://help.adalo.com/integrations/external-collections-with-apis){:target=_blank .external-link} page gives more detail about what you can do with Adalo collections.\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/operation-not-supported.md\"\n\n\n",
  "properties_schema": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "collection",
      "options": [
        {
          "name": "Collection",
          "value": "collection"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a row",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "POST",
              "url": "=/collections/{{$parameter[\"collectionId\"]}}"
            }
          },
          "action": "Create a row"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a row",
          "routing": {
            "request": {
              "method": "DELETE",
              "url": "=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}"
            },
            "output": {
              "postReceive": [
                {
                  "type": "set",
                  "properties": {
                    "value": "={{ { \"success\": true } }}"
                  }
                }
              ]
            }
          },
          "action": "Delete a row"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a row",
          "routing": {
            "request": {
              "method": "GET",
              "url": "=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}"
            }
          },
          "action": "Retrieve a row"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Retrieve many rows",
          "routing": {
            "request": {
              "method": "GET",
              "url": "=/collections/{{$parameter[\"collectionId\"]}}",
              "qs": {
                "limit": "={{$parameter[\"limit\"]}}"
              }
            },
            "send": {
              "paginate": "={{$parameter[\"returnAll\"]}}"
            },
            "output": {
              "postReceive": [
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "records"
                  }
                }
              ]
            }
          },
          "action": "Retrieve all rows"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a row",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "PUT",
              "url": "=/collections/{{$parameter[\"collectionId\"]}}/{{$parameter[\"rowId\"]}}"
            }
          },
          "action": "Update a row"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Collection ID",
      "name": "collectionId",
      "type": "string",
      "default": "",
      "description": "Open your Adalo application and click on the three buttons beside the collection name, then select API Documentation",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Row ID",
      "name": "rowId",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "get",
            "delete",
            "update"
          ],
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Data to Send",
      "name": "dataToSend",
      "type": "options",
      "default": "defineBelow",
      "description": "Whether to insert the input data this node receives in the new row",
      "options": [
        {
          "name": "Auto-Map Input Data to Columns",
          "value": "autoMapInputData",
          "description": "Use when node input properties match destination column names"
        },
        {
          "name": "Define Below for Each Column",
          "value": "defineBelow",
          "description": "Set the value for each destination column"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ],
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Inputs to Ignore",
      "name": "inputsToIgnore",
      "type": "string",
      "default": "",
      "description": "List of input properties to avoid sending, separated by commas. Leave empty to send all properties.",
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ],
          "dataToSend": [
            "autoMapInputData"
          ],
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Fields to Send",
      "name": "fieldsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "Field must be defined in the collection, otherwise it will be ignored. If field defined in the collection is not set here, it will be set to null.",
      "options": [
        {
          "displayName": "Field",
          "name": "fieldValues",
          "values": [
            {
              "displayName": "Field ID",
              "name": "fieldId",
              "type": "string",
              "default": ""
            },
            {
              "displayName": "Field Value",
              "name": "fieldValue",
              "type": "string",
              "default": ""
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "create",
            "update"
          ],
          "dataToSend": [
            "defineBelow"
          ],
          "resource": [
            "collection"
          ]
        }
      },
      "typeOptions": {
        "multipleValueButtonText": "Add Field to Send",
        "multipleValues": true
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "collection"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a row"
    },
    {
      "operation": "delete",
      "name": "Delete",
      "description": "Delete a row"
    },
    {
      "operation": "get",
      "name": "Get",
      "description": "Retrieve a row"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Retrieve many rows"
    },
    {
      "operation": "update",
      "name": "Update",
      "description": "Update a row"
    }
  ],
  "credentials_required": [
    {
      "name": "adaloApi",
      "required": true
    }
  ],
  "generated_at": "2025-07-23T02:24:21.714Z",
  "api_version": "1.0.0"
}