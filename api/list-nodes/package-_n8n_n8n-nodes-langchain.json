[
  {
    "node_type": "nodes-langchain.agent",
    "display_name": "AI Agent",
    "description": "Generates an action plan and executes it. Can use external tools.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_agent.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_agent.json"
    }
  },
  {
    "node_type": "nodes-langchain.chainLlm",
    "display_name": "Basic LLM Chain",
    "description": "A simple chain to prompt a large language model",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_chainLlm.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_chainLlm.json"
    }
  },
  {
    "node_type": "nodes-langchain.chainRetrievalQa",
    "display_name": "Question and Answer Chain",
    "description": "Answer questions about retrieved documents",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_chainRetrievalQa.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_chainRetrievalQa.json"
    }
  },
  {
    "node_type": "nodes-langchain.chainSummarization",
    "display_name": "Summarization Chain",
    "description": "Transforms text into a concise summary",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_chainSummarization.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_chainSummarization.json"
    }
  },
  {
    "node_type": "nodes-langchain.chatTrigger",
    "display_name": "Chat Trigger",
    "description": "Runs the workflow when an n8n generated webchat is submitted",
    "category": "trigger",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": true,
    "is_webhook": true,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_chatTrigger.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_chatTrigger.json"
    }
  },
  {
    "node_type": "nodes-langchain.code",
    "display_name": "LangChain Code",
    "description": "LangChain Code Node",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_code.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_code.json"
    }
  },
  {
    "node_type": "nodes-langchain.documentBinaryInputLoader",
    "display_name": "Binary Input Loader",
    "description": "Use binary data from a previous step in the workflow",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_documentBinaryInputLoader.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_documentBinaryInputLoader.json"
    }
  },
  {
    "node_type": "nodes-langchain.documentDefaultDataLoader",
    "display_name": "Default Data Loader",
    "description": "Load data from previous step in the workflow",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_documentDefaultDataLoader.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_documentDefaultDataLoader.json"
    }
  },
  {
    "node_type": "nodes-langchain.documentGithubLoader",
    "display_name": "GitHub Document Loader",
    "description": "Use GitHub data as input to this chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_documentGithubLoader.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_documentGithubLoader.json"
    }
  },
  {
    "node_type": "nodes-langchain.documentJsonInputLoader",
    "display_name": "JSON Input Loader",
    "description": "Use JSON data from a previous step in the workflow",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_documentJsonInputLoader.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_documentJsonInputLoader.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsAwsBedrock",
    "display_name": "Embeddings AWS Bedrock",
    "description": "Use Embeddings AWS Bedrock",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsAwsBedrock.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsAwsBedrock.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsAzureOpenAi",
    "display_name": "Embeddings Azure OpenAI",
    "description": "Use Embeddings Azure OpenAI",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsAzureOpenAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsAzureOpenAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsCohere",
    "display_name": "Embeddings Cohere",
    "description": "Use Cohere Embeddings",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsCohere.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsCohere.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsGoogleGemini",
    "display_name": "Embeddings Google Gemini",
    "description": "Use Google Gemini Embeddings",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsGoogleGemini.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsGoogleGemini.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsGoogleVertex",
    "display_name": "Embeddings Google Vertex",
    "description": "Use Google Vertex Embeddings",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsGoogleVertex.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsGoogleVertex.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsHuggingFaceInference",
    "display_name": "Embeddings Hugging Face Inference",
    "description": "Use HuggingFace Inference Embeddings",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsHuggingFaceInference.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsHuggingFaceInference.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsMistralCloud",
    "display_name": "Embeddings Mistral Cloud",
    "description": "Use Embeddings Mistral Cloud",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsMistralCloud.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsMistralCloud.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsOllama",
    "display_name": "Embeddings Ollama",
    "description": "Use Ollama Embeddings",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsOllama.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsOllama.json"
    }
  },
  {
    "node_type": "nodes-langchain.embeddingsOpenAi",
    "display_name": "Embeddings OpenAI",
    "description": "Use Embeddings OpenAI",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_embeddingsOpenAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_embeddingsOpenAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.informationExtractor",
    "display_name": "Information Extractor",
    "description": "Extract information from text in a structured format",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_informationExtractor.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_informationExtractor.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatAnthropic",
    "display_name": "Anthropic Chat Model",
    "description": "Language Model Anthropic",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatAnthropic.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatAnthropic.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatAwsBedrock",
    "display_name": "AWS Bedrock Chat Model",
    "description": "Language Model AWS Bedrock",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatAwsBedrock.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatAwsBedrock.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatAzureOpenAi",
    "display_name": "Azure OpenAI Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatAzureOpenAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatAzureOpenAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatDeepSeek",
    "display_name": "DeepSeek Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatDeepSeek.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatDeepSeek.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatGoogleGemini",
    "display_name": "Google Gemini Chat Model",
    "description": "Chat Model Google Gemini",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatGoogleGemini.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatGoogleGemini.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatGoogleVertex",
    "display_name": "Google Vertex Chat Model",
    "description": "Chat Model Google Vertex",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatGoogleVertex.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatGoogleVertex.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatGroq",
    "display_name": "Groq Chat Model",
    "description": "Language Model Groq",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatGroq.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatGroq.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatMistralCloud",
    "display_name": "Mistral Cloud Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatMistralCloud.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatMistralCloud.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatOllama",
    "display_name": "Ollama Chat Model",
    "description": "Language Model Ollama",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatOllama.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatOllama.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatOpenAi",
    "display_name": "OpenAI Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatOpenAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatOpenAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatOpenRouter",
    "display_name": "OpenRouter Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatOpenRouter.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatOpenRouter.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmChatXAiGrok",
    "display_name": "xAI Grok Chat Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmChatXAiGrok.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmChatXAiGrok.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmCohere",
    "display_name": "Cohere Model",
    "description": "Language Model Cohere",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmCohere.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmCohere.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmOllama",
    "display_name": "Ollama Model",
    "description": "Language Model Ollama",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmOllama.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmOllama.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmOpenAi",
    "display_name": "OpenAI Model",
    "description": "For advanced usage with an AI chain",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmOpenAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmOpenAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.lmOpenHuggingFaceInference",
    "display_name": "Hugging Face Inference Model",
    "description": "Language Model HuggingFaceInference",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_lmOpenHuggingFaceInference.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_lmOpenHuggingFaceInference.json"
    }
  },
  {
    "node_type": "nodes-langchain.manualChatTrigger",
    "display_name": "Manual Chat Trigger",
    "description": "Runs the flow on new manual chat message",
    "category": "trigger",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": true,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_manualChatTrigger.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_manualChatTrigger.json"
    }
  },
  {
    "node_type": "nodes-langchain.mcpClientTool",
    "display_name": "MCP Client Tool",
    "description": "Connect tools from an MCP Server",
    "category": "output",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_mcpClientTool.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_mcpClientTool.json"
    }
  },
  {
    "node_type": "nodes-langchain.mcpTrigger",
    "display_name": "MCP Server Trigger",
    "description": "Expose n8n tools as an MCP Server endpoint",
    "category": "trigger",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": true,
    "is_webhook": true,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_mcpTrigger.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_mcpTrigger.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryBufferWindow",
    "display_name": "Simple Memory",
    "description": "Stores in n8n memory, so no credentials required",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryBufferWindow.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryBufferWindow.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryChatRetriever",
    "display_name": "Chat Messages Retriever",
    "description": "Retrieve chat messages from memory and use them in the workflow",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryChatRetriever.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryChatRetriever.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryManager",
    "display_name": "Chat Memory Manager",
    "description": "Manage chat messages memory and use it in the workflow",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryManager.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryManager.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryMongoDbChat",
    "display_name": "MongoDB Chat Memory",
    "description": "Stores the chat history in MongoDB collection.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryMongoDbChat.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryMongoDbChat.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryMotorhead",
    "display_name": "Motorhead",
    "description": "Use Motorhead Memory",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryMotorhead.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryMotorhead.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryPostgresChat",
    "display_name": "Postgres Chat Memory",
    "description": "Stores the chat history in Postgres table.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryPostgresChat.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryPostgresChat.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryRedisChat",
    "display_name": "Redis Chat Memory",
    "description": "Stores the chat history in Redis.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryRedisChat.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryRedisChat.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryXata",
    "display_name": "Xata",
    "description": "Use Xata Memory",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryXata.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryXata.json"
    }
  },
  {
    "node_type": "nodes-langchain.memoryZep",
    "display_name": "Zep",
    "description": "Use Zep Memory",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_memoryZep.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_memoryZep.json"
    }
  },
  {
    "node_type": "nodes-langchain.modelSelector",
    "display_name": "Model Selector",
    "description": "Use this node to select one of the connected models to this node based on workflow data",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_modelSelector.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_modelSelector.json"
    }
  },
  {
    "node_type": "nodes-langchain.openAi",
    "display_name": "OpenAI",
    "description": "Message an assistant or GPT, analyze images, generate audio, etc.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_openAi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_openAi.json"
    }
  },
  {
    "node_type": "nodes-langchain.openAiAssistant",
    "display_name": "OpenAI Assistant",
    "description": "Utilizes Assistant API from Open AI.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_openAiAssistant.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_openAiAssistant.json"
    }
  },
  {
    "node_type": "nodes-langchain.outputParserAutofixing",
    "display_name": "Auto-fixing Output Parser",
    "description": "Deprecated, use structured output parser",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_outputParserAutofixing.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_outputParserAutofixing.json"
    }
  },
  {
    "node_type": "nodes-langchain.outputParserItemList",
    "display_name": "Item List Output Parser",
    "description": "Return the results as separate items",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_outputParserItemList.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_outputParserItemList.json"
    }
  },
  {
    "node_type": "nodes-langchain.outputParserStructured",
    "display_name": "Structured Output Parser",
    "description": "Return data in a defined JSON format",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_outputParserStructured.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_outputParserStructured.json"
    }
  },
  {
    "node_type": "nodes-langchain.rerankerCohere",
    "display_name": "Reranker Cohere",
    "description": "Use Cohere Reranker to reorder documents after retrieval from a vector store by relevance to the given query.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": true,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_rerankerCohere.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_rerankerCohere.json"
    }
  },
  {
    "node_type": "nodes-langchain.retrieverContextualCompression",
    "display_name": "Contextual Compression Retriever",
    "description": "Enhances document similarity search by contextual compression.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_retrieverContextualCompression.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_retrieverContextualCompression.json"
    }
  },
  {
    "node_type": "nodes-langchain.retrieverMultiQuery",
    "display_name": "MultiQuery Retriever",
    "description": "Automates prompt tuning, generates diverse queries and expands document pool for enhanced retrieval.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_retrieverMultiQuery.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_retrieverMultiQuery.json"
    }
  },
  {
    "node_type": "nodes-langchain.retrieverVectorStore",
    "display_name": "Vector Store Retriever",
    "description": "Use a Vector Store as Retriever",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_retrieverVectorStore.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_retrieverVectorStore.json"
    }
  },
  {
    "node_type": "nodes-langchain.retrieverWorkflow",
    "display_name": "Workflow Retriever",
    "description": "Use an n8n Workflow as Retriever",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_retrieverWorkflow.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_retrieverWorkflow.json"
    }
  },
  {
    "node_type": "nodes-langchain.sentimentAnalysis",
    "display_name": "Sentiment Analysis",
    "description": "Analyze the sentiment of your text",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_sentimentAnalysis.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_sentimentAnalysis.json"
    }
  },
  {
    "node_type": "nodes-langchain.textClassifier",
    "display_name": "Text Classifier",
    "description": "Classify your text into distinct categories",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_textClassifier.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_textClassifier.json"
    }
  },
  {
    "node_type": "nodes-langchain.textSplitterCharacterTextSplitter",
    "display_name": "Character Text Splitter",
    "description": "Split text into chunks by characters",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_textSplitterCharacterTextSplitter.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_textSplitterCharacterTextSplitter.json"
    }
  },
  {
    "node_type": "nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
    "display_name": "Recursive Character Text Splitter",
    "description": "Split text into chunks by characters recursively, recommended for most use cases",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_textSplitterRecursiveCharacterTextSplitter.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_textSplitterRecursiveCharacterTextSplitter.json"
    }
  },
  {
    "node_type": "nodes-langchain.textSplitterTokenSplitter",
    "display_name": "Token Splitter",
    "description": "Split text into chunks by tokens",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_textSplitterTokenSplitter.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_textSplitterTokenSplitter.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolCalculator",
    "display_name": "Calculator",
    "description": "Make it easier for AI agents to perform arithmetic",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolCalculator.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolCalculator.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolCode",
    "display_name": "Code Tool",
    "description": "Write a tool in JS or Python",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolCode.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolCode.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolExecutor",
    "display_name": "Tool Executor",
    "description": "Node to execute tools without an AI Agent",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolExecutor.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolExecutor.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolHttpRequest",
    "display_name": "HTTP Request Tool",
    "description": "Makes an HTTP request and returns the response data",
    "category": "output",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolHttpRequest.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolHttpRequest.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolSearXng",
    "display_name": "SearXNG",
    "description": "Search in SearXNG",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolSearXng.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolSearXng.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolSerpApi",
    "display_name": "SerpApi (Google Search)",
    "description": "Search in Google using SerpAPI",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolSerpApi.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolSerpApi.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolThink",
    "display_name": "Think Tool",
    "description": "Invite the AI agent to do some thinking",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolThink.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolThink.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolVectorStore",
    "display_name": "Vector Store Question Answer Tool",
    "description": "Answer questions with a vector store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolVectorStore.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolVectorStore.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolWikipedia",
    "display_name": "Wikipedia",
    "description": "Search in Wikipedia",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolWikipedia.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolWikipedia.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolWolframAlpha",
    "display_name": "Wolfram|Alpha",
    "description": "Connects to WolframAlpha's computational intelligence engine.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolWolframAlpha.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolWolframAlpha.json"
    }
  },
  {
    "node_type": "nodes-langchain.toolWorkflow",
    "display_name": "Call n8n Sub-Workflow Tool",
    "description": "Uses another n8n workflow as a tool. Allows packaging any n8n node(s) as a tool.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_toolWorkflow.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_toolWorkflow.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreInMemory",
    "display_name": "Simple Vector Store",
    "description": "The easiest way to experiment with vector stores, without external setup.",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreInMemory.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreInMemory.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreInMemoryInsert",
    "display_name": "In Memory Vector Store Insert",
    "description": "Insert data into an in-memory vector store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreInMemoryInsert.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreInMemoryInsert.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreInMemoryLoad",
    "display_name": "In Memory Vector Store Load",
    "description": "Load embedded data from an in-memory vector store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreInMemoryLoad.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreInMemoryLoad.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreMilvus",
    "display_name": "Milvus Vector Store",
    "description": "Work with your data in Milvus Vector Store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreMilvus.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreMilvus.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreMongoDBAtlas",
    "display_name": "MongoDB Atlas Vector Store",
    "description": "Work with your data in MongoDB Atlas Vector Store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreMongoDBAtlas.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreMongoDBAtlas.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStorePGVector",
    "display_name": "Postgres PGVector Store",
    "description": "Work with your data in Postgresql with the PGVector extension",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStorePGVector.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStorePGVector.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStorePinecone",
    "display_name": "Pinecone Vector Store",
    "description": "Work with your data in Pinecone Vector Store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStorePinecone.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStorePinecone.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStorePineconeInsert",
    "display_name": "Pinecone: Insert",
    "description": "Insert data into Pinecone Vector Store index",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStorePineconeInsert.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStorePineconeInsert.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStorePineconeLoad",
    "display_name": "Pinecone: Load",
    "description": "Load data from Pinecone Vector Store index",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStorePineconeLoad.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStorePineconeLoad.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreQdrant",
    "display_name": "Qdrant Vector Store",
    "description": "Work with your data in a Qdrant collection",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreQdrant.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreQdrant.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreSupabase",
    "display_name": "Supabase Vector Store",
    "description": "Work with your data in Supabase Vector Store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreSupabase.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreSupabase.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreSupabaseInsert",
    "display_name": "Supabase: Insert",
    "description": "Insert data into Supabase Vector Store index [https://supabase.com/docs/guides/ai/langchain]",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreSupabaseInsert.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreSupabaseInsert.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreSupabaseLoad",
    "display_name": "Supabase: Load",
    "description": "Load data from Supabase Vector Store index",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreSupabaseLoad.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreSupabaseLoad.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreZep",
    "display_name": "Zep Vector Store",
    "description": "Work with your data in Zep Vector Store",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreZep.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreZep.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreZepInsert",
    "display_name": "Zep Vector Store: Insert",
    "description": "Insert data into Zep Vector Store index",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreZepInsert.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreZepInsert.json"
    }
  },
  {
    "node_type": "nodes-langchain.vectorStoreZepLoad",
    "display_name": "Zep Vector Store: Load",
    "description": "Load data from Zep Vector Store index",
    "category": "transform",
    "package_name": "@n8n/n8n-nodes-langchain",
    "is_ai_tool": false,
    "is_trigger": false,
    "is_webhook": false,
    "development_style": "programmatic",
    "api_urls": {
      "detailed": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-detailed/nodes-langchain_vectorStoreZepLoad.json",
      "essentials": "https://federico-barco-agencycic.github.io/docu-n8n-mcp/api/nodes-essentials/nodes-langchain_vectorStoreZepLoad.json"
    }
  }
]