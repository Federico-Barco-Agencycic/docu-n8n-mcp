{
  "node_type": "nodes-base.microsoftTeams",
  "package_name": "n8n-nodes-base",
  "display_name": "Microsoft Teams",
  "description": "Consume Microsoft Teams API",
  "category": "input",
  "development_style": "programmatic",
  "is_ai_tool": 0,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 1,
  "version": "2",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Microsoft Teams node documentation\ndescription: Learn how to use the Microsoft Teams node in n8n. Follow technical documentation to integrate Microsoft Teams node into your workflows.\ncontentType: [integration, reference]\npriority: medium\n---\n\n# Microsoft Teams node\n\nUse the Microsoft Teams node to automate work in Microsoft Teams, and integrate Microsoft Teams with other applications. n8n has built-in support for a wide range of Microsoft Teams features, including creating and deleting, channels, messages, and tasks. \n\nOn this page, you'll find a list of operations the Microsoft Teams node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Microsoft credentials](/integrations/builtin/credentials/microsoft.md) for guidance on setting up authentication.\n///\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/ai-tools.md\"\n\n## Operations\n\n* Channel\n    * Create\n    * Delete\n    * Get\n    * Get Many\n    * Update\n* Channel Message\n    * Create\n    * Get Many\n* Chat Message\n\t* Create\n\t* Get\n\t* Get Many\n\t* Send and Wait for Response\n* Task\n    * Create\n    * Delete\n    * Get\n    * Get Many\n    * Update\n\n--8<-- \"_snippets/integrations/builtin/send-and-wait-operation.md\"\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'microsoft-teams') ]]\n\n## Related resources\n\nRefer to [Microsoft Teams' API documentation](https://learn.microsoft.com/en-us/graph/api/overview?view=graph-rest-1.0){:target=_blank .external-link} for more information about the service.\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/operation-not-supported.md\"\n",
  "properties_schema": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "channel",
      "options": [
        {
          "name": "Channel",
          "value": "channel"
        },
        {
          "name": "Channel Message",
          "value": "channelMessage"
        },
        {
          "name": "Chat Message",
          "value": "chatMessage"
        },
        {
          "name": "Task",
          "value": "task"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a channel",
          "action": "Create channel"
        },
        {
          "name": "Delete",
          "value": "deleteChannel",
          "description": "Delete a channel",
          "action": "Delete channel"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a channel",
          "action": "Get channel"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many channels",
          "action": "Get many channels"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a channel",
          "action": "Update channel"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "New Channel Name",
      "name": "name",
      "type": "string",
      "default": "",
      "description": "The name of the new channel you want to create",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Description",
          "name": "description",
          "type": "string",
          "default": "",
          "description": "The description of the channel",
          "typeOptions": {
            "rows": 2
          }
        },
        {
          "displayName": "Type",
          "name": "type",
          "type": "options",
          "options": [
            {
              "name": "Private",
              "value": "private"
            },
            {
              "name": "Standard",
              "value": "standard"
            }
          ],
          "default": "standard",
          "description": "Standard: Accessible to everyone on the team. Private: Accessible only to a specific group of people within the team."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "deleteChannel"
          ]
        }
      }
    },
    {
      "displayName": "Channel",
      "name": "channelId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the channel from the list, by URL, or by ID (the ID is the \"threadId\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "deleteChannel"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "teamId.value"
        ]
      }
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Channel",
      "name": "channelId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the channel from the list, by URL, or by ID (the ID is the \"threadId\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "teamId.value"
        ]
      }
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "channel"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Channel",
      "name": "channelId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the channel from the list, by URL, or by ID (the ID is the \"threadId\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "teamId.value"
        ]
      }
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "description": "The name of the channel",
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Description",
          "name": "description",
          "type": "string",
          "default": "",
          "description": "The description of the channel",
          "typeOptions": {
            "rows": 2
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "channel"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a message in a channel",
          "action": "Create message"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many messages from a channel",
          "action": "Get many messages"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Channel",
      "name": "channelId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the channel from the list, by URL, or by ID (the ID is the \"threadId\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "teamId.value"
        ]
      }
    },
    {
      "displayName": "Content Type",
      "name": "contentType",
      "type": "options",
      "default": "text",
      "description": "Whether the message is plain text or HTML",
      "options": [
        {
          "name": "Text",
          "value": "text"
        },
        {
          "name": "HTML",
          "value": "html"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Message",
      "name": "message",
      "type": "string",
      "default": "",
      "description": "The content of the message to be sent",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "rows": 2
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Include Link to Workflow",
          "name": "includeLinkToWorkflow",
          "type": "boolean",
          "default": true,
          "description": "Whether to append a link to this workflow at the end of the message. This is helpful if you have many workflows sending messages."
        },
        {
          "displayName": "Reply to ID",
          "name": "makeReply",
          "type": "string",
          "default": "",
          "placeholder": "e.g. 1673348720590",
          "description": "An optional ID of the message you want to reply to. The message ID is the number before \"?tenantId\" in the message URL."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Team",
      "name": "teamId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the team from the list, by URL, or by ID (the ID is the \"groupId\" parameter in the URL you get from \"Get a link to the team\")",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Channel",
      "name": "channelId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the channel from the list, by URL, or by ID (the ID is the \"threadId\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "teamId.value"
        ]
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "channelMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a message in a chat",
          "action": "Create chat message"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a message from a chat",
          "action": "Get chat message"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many messages from a chat",
          "action": "Get many chat messages"
        },
        {
          "name": "Send and Wait for Response",
          "value": "sendAndWait",
          "description": "Send a message and wait for response",
          "action": "Send message and wait for response"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Chat",
      "name": "chatId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the chat from the list, by URL, or by ID (find the chat ID after \"conversations/\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Content Type",
      "name": "contentType",
      "type": "options",
      "default": "text",
      "description": "Whether the message is plain text or HTML",
      "options": [
        {
          "name": "Text",
          "value": "text"
        },
        {
          "name": "HTML",
          "value": "html"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Message",
      "name": "message",
      "type": "string",
      "default": "",
      "description": "The content of the message to be sent",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "rows": 2
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "description": "Other options to set",
      "options": [
        {
          "displayName": "Include Link to Workflow",
          "name": "includeLinkToWorkflow",
          "type": "boolean",
          "default": true,
          "description": "Whether to append a link to this workflow at the end of the message. This is helpful if you have many workflows sending messages."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Chat",
      "name": "chatId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the chat from the list, by URL, or by ID (find the chat ID after \"conversations/\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Message ID",
      "name": "messageId",
      "type": "string",
      "default": "",
      "description": "The ID of the message to retrieve",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Chat",
      "name": "chatId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the chat from the list, by URL, or by ID (find the chat ID after \"conversations/\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Chat",
      "name": "chatId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "Select the chat from the list, by URL, or by ID (find the chat ID after \"conversations/\" in the URL)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      }
    },
    {
      "displayName": "Message",
      "name": "message",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      },
      "typeOptions": {
        "rows": 4
      }
    },
    {
      "displayName": "Response Type",
      "name": "responseType",
      "type": "options",
      "default": "approval",
      "options": [
        {
          "name": "Approval",
          "value": "approval",
          "description": "User can approve/disapprove from within the message"
        },
        {
          "name": "Free Text",
          "value": "freeText",
          "description": "User can submit a response via a form"
        },
        {
          "name": "Custom Form",
          "value": "customForm",
          "description": "User can submit a response via a custom form"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      }
    },
    {
      "displayName": "Define Form",
      "name": "defineForm",
      "type": "options",
      "default": "fields",
      "options": [
        {
          "name": "Using Fields Below",
          "value": "fields"
        },
        {
          "name": "Using JSON",
          "value": "json"
        }
      ],
      "displayOptions": {
        "show": {
          "responseType": [
            "customForm"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form Fields",
      "name": "jsonOutput",
      "type": "json",
      "default": "[\n   {\n      \"fieldLabel\":\"Name\",\n      \"placeholder\":\"enter you name\",\n      \"requiredField\":true\n   },\n   {\n      \"fieldLabel\":\"Age\",\n      \"fieldType\":\"number\",\n      \"placeholder\":\"enter your age\"\n   },\n   {\n      \"fieldLabel\":\"Email\",\n      \"fieldType\":\"email\",\n      \"requiredField\":true\n   }\n]",
      "displayOptions": {
        "show": {
          "defineForm": [
            "json"
          ],
          "responseType": [
            "customForm"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      },
      "typeOptions": {
        "rows": 5
      }
    },
    {
      "displayName": "Form Elements",
      "name": "formFields",
      "type": "fixedCollection",
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Field Name",
              "name": "fieldLabel",
              "type": "string",
              "default": "",
              "placeholder": "e.g. What is your name?",
              "description": "Label that appears above the input field",
              "required": true,
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "hiddenField",
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Element Type",
              "name": "fieldType",
              "type": "options",
              "default": "text",
              "description": "The type of field to add to the form",
              "options": [
                {
                  "name": "Custom HTML",
                  "value": "html"
                },
                {
                  "name": "Date",
                  "value": "date"
                },
                {
                  "name": "Dropdown List",
                  "value": "dropdown"
                },
                {
                  "name": "Email",
                  "value": "email"
                },
                {
                  "name": "File",
                  "value": "file"
                },
                {
                  "name": "Hidden Field",
                  "value": "hiddenField"
                },
                {
                  "name": "Number",
                  "value": "number"
                },
                {
                  "name": "Password",
                  "value": "password"
                },
                {
                  "name": "Text",
                  "value": "text"
                },
                {
                  "name": "Textarea",
                  "value": "textarea"
                }
              ],
              "required": true
            },
            {
              "displayName": "Element Name",
              "name": "elementName",
              "type": "string",
              "default": "",
              "placeholder": "e.g. content-section",
              "description": "Optional field. It can be used to include the html in the output.",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Placeholder",
              "name": "placeholder",
              "description": "Sample text to display inside the field",
              "type": "string",
              "default": "",
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "dropdown",
                    "date",
                    "file",
                    "html",
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Name",
              "name": "fieldName",
              "description": "The name of the field, used in input attributes and referenced by the workflow",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Value",
              "name": "fieldValue",
              "description": "Input value can be set here or will be passed as a query parameter via Field Name if no value is set",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Options",
              "name": "fieldOptions",
              "placeholder": "Add Field Option",
              "description": "List of options that can be selected from the dropdown",
              "type": "fixedCollection",
              "default": {
                "values": [
                  {
                    "option": ""
                  }
                ]
              },
              "required": true,
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "dropdown"
                  ]
                }
              },
              "typeOptions": {
                "multipleValues": true,
                "sortable": true
              },
              "options": [
                {
                  "displayName": "Values",
                  "name": "values",
                  "values": [
                    {
                      "displayName": "Option",
                      "name": "option",
                      "type": "string",
                      "default": ""
                    }
                  ]
                }
              ]
            },
            {
              "displayName": "Multiple Choice",
              "name": "multiselect",
              "type": "boolean",
              "default": false,
              "description": "Whether to allow the user to select multiple options from the dropdown list",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "dropdown"
                  ]
                }
              }
            },
            {
              "displayName": "HTML",
              "name": "html",
              "typeOptions": {
                "editor": "htmlEditor"
              },
              "type": "string",
              "noDataExpression": true,
              "default": "<!-- Your custom HTML here --->\n\n\n",
              "description": "HTML elements to display on the form page",
              "hint": "Does not accept <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;input&gt;</code> tags",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Multiple Files",
              "name": "multipleFiles",
              "type": "boolean",
              "default": true,
              "description": "Whether to allow the user to select multiple files from the file input or just one",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "file"
                  ]
                }
              }
            },
            {
              "displayName": "Accepted File Types",
              "name": "acceptFileTypes",
              "type": "string",
              "default": "",
              "description": "Comma-separated list of allowed file extensions",
              "hint": "Leave empty to allow all file types",
              "placeholder": "e.g. .jpg, .png",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "file"
                  ]
                }
              }
            },
            {
              "displayName": "The displayed date is formatted based on the locale of the user's browser",
              "name": "formatDate",
              "type": "notice",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "date"
                  ]
                }
              }
            },
            {
              "displayName": "Required Field",
              "name": "requiredField",
              "type": "boolean",
              "default": false,
              "description": "Whether to require the user to enter a value for this field before submitting the form",
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "html",
                    "hiddenField"
                  ]
                }
              }
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "defineForm": [
            "fields"
          ],
          "responseType": [
            "customForm"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true,
        "sortable": true
      }
    },
    {
      "displayName": "Approval Options",
      "name": "approvalOptions",
      "type": "fixedCollection",
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Type of Approval",
              "name": "approvalType",
              "type": "options",
              "placeholder": "Add option",
              "default": "single",
              "options": [
                {
                  "name": "Approve Only",
                  "value": "single"
                },
                {
                  "name": "Approve and Disapprove",
                  "value": "double"
                }
              ]
            },
            {
              "displayName": "Approve Button Label",
              "name": "approveLabel",
              "type": "string",
              "default": "✓ Approve",
              "displayOptions": {
                "show": {
                  "approvalType": [
                    "single",
                    "double"
                  ]
                }
              }
            },
            {
              "displayName": "Disapprove Button Label",
              "name": "disapproveLabel",
              "type": "string",
              "default": "✗ Decline",
              "displayOptions": {
                "show": {
                  "approvalType": [
                    "double"
                  ]
                }
              }
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "responseType": [
            "approval"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Limit Wait Time",
          "name": "limitWaitTime",
          "type": "fixedCollection",
          "description": "Whether the workflow will automatically resume execution after the specified limit type",
          "default": {
            "values": {
              "limitType": "afterTimeInterval",
              "resumeAmount": 45,
              "resumeUnit": "minutes"
            }
          },
          "options": [
            {
              "displayName": "Values",
              "name": "values",
              "values": [
                {
                  "displayName": "Limit Type",
                  "name": "limitType",
                  "type": "options",
                  "default": "afterTimeInterval",
                  "description": "Sets the condition for the execution to resume. Can be a specified date or after some time.",
                  "options": [
                    {
                      "name": "After Time Interval",
                      "description": "Waits for a certain amount of time",
                      "value": "afterTimeInterval"
                    },
                    {
                      "name": "At Specified Time",
                      "description": "Waits until the set date and time to continue",
                      "value": "atSpecifiedTime"
                    }
                  ]
                },
                {
                  "displayName": "Amount",
                  "name": "resumeAmount",
                  "type": "number",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "afterTimeInterval"
                      ]
                    }
                  },
                  "typeOptions": {
                    "minValue": 0,
                    "numberPrecision": 2
                  },
                  "default": 1,
                  "description": "The time to wait"
                },
                {
                  "displayName": "Unit",
                  "name": "resumeUnit",
                  "type": "options",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "afterTimeInterval"
                      ]
                    }
                  },
                  "options": [
                    {
                      "name": "Minutes",
                      "value": "minutes"
                    },
                    {
                      "name": "Hours",
                      "value": "hours"
                    },
                    {
                      "name": "Days",
                      "value": "days"
                    }
                  ],
                  "default": "hours",
                  "description": "Unit of the interval value"
                },
                {
                  "displayName": "Max Date and Time",
                  "name": "maxDateAndTime",
                  "type": "dateTime",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "atSpecifiedTime"
                      ]
                    }
                  },
                  "default": "",
                  "description": "Continue execution after the specified date and time"
                }
              ]
            }
          ]
        },
        {
          "displayName": "Append n8n Attribution",
          "name": "appendAttribution",
          "type": "boolean",
          "default": true,
          "description": "Whether to include the phrase \"This message was sent automatically with n8n\" to the end of the message"
        }
      ],
      "displayOptions": {
        "show": {
          "responseType": [
            "approval"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Message Button Label",
          "name": "messageButtonLabel",
          "type": "string",
          "default": "Respond"
        },
        {
          "displayName": "Response Form Title",
          "name": "responseFormTitle",
          "description": "Title of the form that the user can access to provide their response",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Response Form Description",
          "name": "responseFormDescription",
          "description": "Description of the form that the user can access to provide their response",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Response Form Button Label",
          "name": "responseFormButtonLabel",
          "type": "string",
          "default": "Submit"
        },
        {
          "displayName": "Response Form Custom Styling",
          "name": "responseFormCustomCss",
          "type": "string",
          "typeOptions": {
            "rows": 10,
            "editor": "cssEditor"
          },
          "default": ":root {\n\t--font-family: 'Open Sans', sans-serif;\n\t--font-weight-normal: 400;\n\t--font-weight-bold: 600;\n\t--font-size-body: 12px;\n\t--font-size-label: 14px;\n\t--font-size-test-notice: 12px;\n\t--font-size-input: 14px;\n\t--font-size-header: 20px;\n\t--font-size-paragraph: 14px;\n\t--font-size-link: 12px;\n\t--font-size-error: 12px;\n\t--font-size-html-h1: 28px;\n\t--font-size-html-h2: 20px;\n\t--font-size-html-h3: 16px;\n\t--font-size-html-h4: 14px;\n\t--font-size-html-h5: 12px;\n\t--font-size-html-h6: 10px;\n\t--font-size-subheader: 14px;\n\n\t/* Colors */\n\t--color-background: #fbfcfe;\n\t--color-test-notice-text: #e6a23d;\n\t--color-test-notice-bg: #fefaf6;\n\t--color-test-notice-border: #f6dcb7;\n\t--color-card-bg: #ffffff;\n\t--color-card-border: #dbdfe7;\n\t--color-card-shadow: rgba(99, 77, 255, 0.06);\n\t--color-link: #7e8186;\n\t--color-header: #525356;\n\t--color-label: #555555;\n\t--color-input-border: #dbdfe7;\n\t--color-input-text: #71747A;\n\t--color-focus-border: rgb(90, 76, 194);\n\t--color-submit-btn-bg: #ff6d5a;\n\t--color-submit-btn-text: #ffffff;\n\t--color-error: #ea1f30;\n\t--color-required: #ff6d5a;\n\t--color-clear-button-bg: #7e8186;\n\t--color-html-text: #555;\n\t--color-html-link: #ff6d5a;\n\t--color-header-subtext: #7e8186;\n\n\t/* Border Radii */\n\t--border-radius-card: 8px;\n\t--border-radius-input: 6px;\n\t--border-radius-clear-btn: 50%;\n\t--card-border-radius: 8px;\n\n\t/* Spacing */\n\t--padding-container-top: 24px;\n\t--padding-card: 24px;\n\t--padding-test-notice-vertical: 12px;\n\t--padding-test-notice-horizontal: 24px;\n\t--margin-bottom-card: 16px;\n\t--padding-form-input: 12px;\n\t--card-padding: 24px;\n\t--card-margin-bottom: 16px;\n\n\t/* Dimensions */\n\t--container-width: 448px;\n\t--submit-btn-height: 48px;\n\t--checkbox-size: 18px;\n\n\t/* Others */\n\t--box-shadow-card: 0px 4px 16px 0px var(--color-card-shadow);\n\t--opacity-placeholder: 0.5;\n}",
          "description": "Override default styling of the response form with CSS"
        },
        {
          "displayName": "Limit Wait Time",
          "name": "limitWaitTime",
          "type": "fixedCollection",
          "description": "Whether the workflow will automatically resume execution after the specified limit type",
          "default": {
            "values": {
              "limitType": "afterTimeInterval",
              "resumeAmount": 45,
              "resumeUnit": "minutes"
            }
          },
          "options": [
            {
              "displayName": "Values",
              "name": "values",
              "values": [
                {
                  "displayName": "Limit Type",
                  "name": "limitType",
                  "type": "options",
                  "default": "afterTimeInterval",
                  "description": "Sets the condition for the execution to resume. Can be a specified date or after some time.",
                  "options": [
                    {
                      "name": "After Time Interval",
                      "description": "Waits for a certain amount of time",
                      "value": "afterTimeInterval"
                    },
                    {
                      "name": "At Specified Time",
                      "description": "Waits until the set date and time to continue",
                      "value": "atSpecifiedTime"
                    }
                  ]
                },
                {
                  "displayName": "Amount",
                  "name": "resumeAmount",
                  "type": "number",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "afterTimeInterval"
                      ]
                    }
                  },
                  "typeOptions": {
                    "minValue": 0,
                    "numberPrecision": 2
                  },
                  "default": 1,
                  "description": "The time to wait"
                },
                {
                  "displayName": "Unit",
                  "name": "resumeUnit",
                  "type": "options",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "afterTimeInterval"
                      ]
                    }
                  },
                  "options": [
                    {
                      "name": "Minutes",
                      "value": "minutes"
                    },
                    {
                      "name": "Hours",
                      "value": "hours"
                    },
                    {
                      "name": "Days",
                      "value": "days"
                    }
                  ],
                  "default": "hours",
                  "description": "Unit of the interval value"
                },
                {
                  "displayName": "Max Date and Time",
                  "name": "maxDateAndTime",
                  "type": "dateTime",
                  "displayOptions": {
                    "show": {
                      "limitType": [
                        "atSpecifiedTime"
                      ]
                    }
                  },
                  "default": "",
                  "description": "Continue execution after the specified date and time"
                }
              ]
            }
          ]
        },
        {
          "displayName": "Append n8n Attribution",
          "name": "appendAttribution",
          "type": "boolean",
          "default": true,
          "description": "Whether to include the phrase \"This message was sent automatically with n8n\" to the end of the message"
        }
      ],
      "displayOptions": {
        "show": {
          "responseType": [
            "freeText",
            "customForm"
          ],
          "resource": [
            "chatMessage"
          ],
          "operation": [
            "sendAndWait"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a task",
          "action": "Create task"
        },
        {
          "name": "Delete",
          "value": "deleteTask",
          "description": "Delete a task",
          "action": "Delete task"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a task",
          "action": "Get task"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many tasks",
          "action": "Get many tasks"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a task",
          "action": "Update task"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Team",
      "name": "groupId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "groupSource"
        ]
      }
    },
    {
      "displayName": "Plan",
      "name": "planId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "The plan for the task to belong to",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "groupId.value"
        ]
      }
    },
    {
      "displayName": "Bucket",
      "name": "bucketId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "The bucket for the task to belong to",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "planId.value"
        ]
      }
    },
    {
      "displayName": "Title",
      "name": "title",
      "type": "string",
      "default": "",
      "description": "Title of the task",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Assigned To",
          "name": "assignedTo",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "typeOptions": {
            "loadOptionsDependsOn": [
              "groupId.balue"
            ]
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Member...",
              "typeOptions": {
                "searchListMethod": "getMembers",
                "searchable": true
              }
            },
            {
              "displayName": "By ID",
              "name": "id",
              "type": "string",
              "placeholder": "7e2f1174-e8ee-4859-b8b1-a8d1cc63d276",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})[ \t]*",
                    "errorMessage": "Not a valid Microsoft Teams Team ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})"
              }
            }
          ],
          "description": "Who the task should be assigned to"
        },
        {
          "displayName": "Due Date Time",
          "name": "dueDateTime",
          "type": "string",
          "validateType": "dateTime",
          "default": "",
          "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time."
        },
        {
          "displayName": "Percent Complete",
          "name": "percentComplete",
          "type": "number",
          "typeOptions": {
            "minValue": 0,
            "maxValue": 100
          },
          "default": 0,
          "placeholder": "e.g. 75",
          "description": "Percentage of task completion. When set to 100, the task is considered completed."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Task ID",
      "name": "taskId",
      "type": "string",
      "default": "",
      "description": "The ID of the task to delete",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "deleteTask"
          ]
        }
      }
    },
    {
      "displayName": "Task ID",
      "name": "taskId",
      "type": "string",
      "default": "",
      "description": "The ID of the task to retrieve",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Tasks For",
      "name": "tasksFor",
      "type": "options",
      "default": "member",
      "description": "Whether to retrieve the tasks for a user or for a plan",
      "options": [
        {
          "name": "Group Member",
          "value": "member",
          "description": "Tasks assigned to group member"
        },
        {
          "name": "Plan",
          "value": "plan",
          "description": "Tasks in group plan"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Team",
      "name": "groupId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "groupSource"
        ]
      }
    },
    {
      "displayName": "Plan",
      "name": "planId",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "The plan for the task to belong to",
      "required": true,
      "displayOptions": {
        "show": {
          "tasksFor": [
            "plan"
          ],
          "resource": [
            "task"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "groupId.value"
        ]
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "task"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1
      }
    },
    {
      "displayName": "Task ID",
      "name": "taskId",
      "type": "string",
      "default": "",
      "description": "The ID of the task to update",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Update Fields",
      "name": "updateFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Assigned To",
          "name": "assignedTo",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "typeOptions": {
            "loadOptionsDependsOn": [
              "updateFields.groupId.value"
            ]
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Member...",
              "typeOptions": {
                "searchListMethod": "getMembers",
                "searchable": true
              }
            },
            {
              "displayName": "By ID",
              "name": "id",
              "type": "string",
              "placeholder": "7e2f1174-e8ee-4859-b8b1-a8d1cc63d276",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})[ \t]*",
                    "errorMessage": "Not a valid Microsoft Teams Team ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})"
              }
            }
          ],
          "description": "Who the task should be assigned to",
          "hint": "Select 'Team' from options first",
          "required": false
        },
        {
          "displayName": "Bucket",
          "name": "bucketId",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "required": false,
          "typeOptions": {
            "loadOptionsDependsOn": [
              "updateFields.planId.value"
            ]
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Bucket...",
              "typeOptions": {
                "searchListMethod": "getBuckets",
                "searchable": true
              }
            },
            {
              "displayName": "By ID",
              "name": "id",
              "type": "string",
              "placeholder": "rl1HYb0cUEiHPc7zgB_KWWUAA7Of"
            }
          ],
          "description": "The bucket for the task to belong to"
        },
        {
          "displayName": "Due Date Time",
          "name": "dueDateTime",
          "type": "string",
          "validateType": "dateTime",
          "default": "",
          "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time."
        },
        {
          "displayName": "Team",
          "name": "groupId",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "required": false,
          "typeOptions": {
            "loadOptionsDependsOn": [
              "/groupSource"
            ]
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Team...",
              "typeOptions": {
                "searchListMethod": "getGroups",
                "searchable": true
              }
            },
            {
              "displayName": "By ID",
              "name": "id",
              "type": "string",
              "placeholder": "12f0ca7d-b77f-4c4e-93d2-5cbdb4f464c6",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})[ \t]*",
                    "errorMessage": "Not a valid Microsoft Teams Team ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})"
              }
            }
          ]
        },
        {
          "displayName": "Percent Complete",
          "name": "percentComplete",
          "type": "number",
          "typeOptions": {
            "minValue": 0,
            "maxValue": 100
          },
          "default": 0,
          "placeholder": "e.g. 75",
          "description": "Percentage of task completion. When set to 100, the task is considered completed."
        },
        {
          "displayName": "Plan",
          "name": "planId",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "required": false,
          "typeOptions": {
            "loadOptionsDependsOn": [
              "updateFields.groupId.value"
            ]
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Plan...",
              "typeOptions": {
                "searchListMethod": "getPlans",
                "searchable": true
              }
            },
            {
              "displayName": "By ID",
              "name": "id",
              "type": "string",
              "placeholder": "rl1HYb0cUEiHPc7zgB_KWWUAA7Of"
            }
          ],
          "description": "The plan for the task to belong to",
          "hint": "Select 'Team' from options first"
        },
        {
          "displayName": "Title",
          "name": "title",
          "type": "string",
          "default": "",
          "placeholder": "e.g. my task",
          "description": "Title of the task"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "task"
          ],
          "operation": [
            "update"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a channel"
    },
    {
      "operation": "deleteChannel",
      "name": "Delete",
      "description": "Delete a channel"
    },
    {
      "operation": "get",
      "name": "Get",
      "description": "Get a channel"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Get many channels"
    },
    {
      "operation": "update",
      "name": "Update",
      "description": "Update a channel"
    }
  ],
  "credentials_required": [
    {
      "name": "microsoftTeamsOAuth2Api",
      "required": true
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}