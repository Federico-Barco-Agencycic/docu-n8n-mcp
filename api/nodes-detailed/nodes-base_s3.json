{
  "node_type": "nodes-base.s3",
  "package_name": "n8n-nodes-base",
  "display_name": "S3",
  "description": "Sends data to any S3-compatible service",
  "category": "output",
  "development_style": "programmatic",
  "is_ai_tool": 1,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 0,
  "version": "1",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: S3 node documentation\ndescription: Learn how to use the S3 node in n8n. Follow technical documentation to integrate S3 node into your workflows.\ncontentType: [integration, reference]\npriority: medium\n---\n\n# S3 node\n\nUse the S3 node to automate work in non-AWS S3 storage and integrate S3 with other applications. n8n has built-in support for a wide range of S3 features, including creating, deleting, and getting buckets, files, and folders. For AWS S3, use [AWS S3](/integrations/builtin/app-nodes/n8n-nodes-base.awss3.md).\n\nUse the S3 node for non-AWS S3 solutions like:\n\n* [MinIO](https://min.io/){:target=\"_blank\" .external-link}\n* [Wasabi](https://wasabi.com/){:target=\"_blank\" .external-link}\n* [Digital Ocean spaces](https://www.digitalocean.com/products/spaces){:target=\"_blank\" .external-link}\n\nOn this page, you'll find a list of operations the S3 node supports and links to more resources.\n\n/// note | Credentials\nRefer to [S3 credentials](/integrations/builtin/credentials/s3.md) for guidance on setting up authentication.\n///\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/ai-tools.md\"\n\n## Operations\n\n* Bucket\n    * Create a bucket\n    * Delete a bucket\n    * Get all buckets\n    * Search within a bucket\n* File\n    * Copy a file\n    * Delete a file\n    * Download a file\n    * Get all files\n    * Upload a file\n\n    /// note | Attach file for upload\n    To attach a file for upload, use another node to pass the file as a data property. Nodes like the [Read/Write Files from Disk](/integrations/builtin/core-nodes/n8n-nodes-base.readwritefile.md) node or the [HTTP Request](/integrations/builtin/core-nodes/n8n-nodes-base.httprequest/index.md) work well.\n    ///\n\n* Folder\n    * Create a folder\n    * Delete a folder\n    * Get all folders\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 's3') ]]\n\n## Node reference\n\n### Setting file permissions in Wasabi\n\nWhen uploading files to [Wasabi](https://wasabi.com/){:target=\"_blank\" .external-link}, you must set permissions for the files using the **ACL** dropdown and not the toggles.\n\n![File permissions when using the S3 node with Wasabi](/_images/integrations/builtin/app-nodes/s3/acl_dropdown.png)\n",
  "properties_schema": [
    {
      "displayName": "This node is for services that use the S3 standard, e.g. Minio or Digital Ocean Spaces. For AWS S3 use the 'AWS S3' node.",
      "name": "s3StandardNotice",
      "type": "notice",
      "default": ""
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "file",
      "options": [
        {
          "name": "Bucket",
          "value": "bucket"
        },
        {
          "name": "File",
          "value": "file"
        },
        {
          "name": "Folder",
          "value": "folder"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a bucket",
          "action": "Create a bucket"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a bucket",
          "action": "Delete a bucket"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many buckets",
          "action": "Get many buckets"
        },
        {
          "name": "Search",
          "value": "search",
          "description": "Search within a bucket",
          "action": "Search a bucket"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "description": "A succinct description of the nature, symptoms, cause, or effect of the bucket",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "ACL",
          "name": "acl",
          "type": "options",
          "options": [
            {
              "name": "Authenticated Read",
              "value": "authenticatedRead"
            },
            {
              "name": "Private",
              "value": "Private"
            },
            {
              "name": "Public Read",
              "value": "publicRead"
            },
            {
              "name": "Public Read Write",
              "value": "publicReadWrite"
            }
          ],
          "default": "",
          "description": "The canned ACL to apply to the bucket"
        },
        {
          "displayName": "Bucket Object Lock Enabled",
          "name": "bucketObjectLockEnabled",
          "type": "boolean",
          "default": false,
          "description": "Whether you want S3 Object Lock to be enabled for the new bucket"
        },
        {
          "displayName": "Grant Full Control",
          "name": "grantFullControl",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee the read, write, read ACP, and write ACP permissions on the bucket"
        },
        {
          "displayName": "Grant Read",
          "name": "grantRead",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to list the objects in the bucket"
        },
        {
          "displayName": "Grant Read ACP",
          "name": "grantReadAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to read the bucket ACL"
        },
        {
          "displayName": "Grant Write",
          "name": "grantWrite",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to create, overwrite, and delete any object in the bucket"
        },
        {
          "displayName": "Grant Write ACP",
          "name": "grantWriteAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to write the ACL for the applicable bucket"
        },
        {
          "displayName": "Region",
          "name": "region",
          "type": "string",
          "default": "",
          "description": "Region you want to create the bucket in, by default the buckets are created on the region defined on the credentials"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "default": "",
      "description": "Name of the AWS S3 bucket to delete",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "bucket"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "bucket"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "search"
          ],
          "resource": [
            "bucket"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "search"
          ],
          "resource": [
            "bucket"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Delimiter",
          "name": "delimiter",
          "type": "string",
          "default": "",
          "description": "A delimiter is a character you use to group keys"
        },
        {
          "displayName": "Encoding Type",
          "name": "encodingType",
          "type": "options",
          "options": [
            {
              "name": "URL",
              "value": "url"
            }
          ],
          "default": "",
          "description": "Encoding type used by Amazon S3 to encode object keys in the response"
        },
        {
          "displayName": "Fetch Owner",
          "name": "fetchOwner",
          "type": "boolean",
          "default": false,
          "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true"
        },
        {
          "displayName": "Prefix",
          "name": "prefix",
          "type": "string",
          "default": "",
          "description": "Limits the response to keys that begin with the specified prefix"
        },
        {
          "displayName": "Requester Pays",
          "name": "requesterPays",
          "type": "boolean",
          "default": false,
          "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled."
        },
        {
          "displayName": "Start After",
          "name": "startAfter",
          "type": "string",
          "default": "",
          "description": "StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this specified key."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "bucket"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a folder",
          "action": "Create a folder"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a folder",
          "action": "Delete a folder"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many folders",
          "action": "Get many folders"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Folder Name",
      "name": "folderName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Parent Folder Key",
          "name": "parentFolderKey",
          "type": "string",
          "default": "",
          "description": "Parent folder you want to create the folder in"
        },
        {
          "displayName": "Requester Pays",
          "name": "requesterPays",
          "type": "boolean",
          "default": false,
          "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled."
        },
        {
          "displayName": "Storage Class",
          "name": "storageClass",
          "type": "options",
          "options": [
            {
              "name": "Deep Archive",
              "value": "deepArchive"
            },
            {
              "name": "Glacier",
              "value": "glacier"
            },
            {
              "name": "Intelligent Tiering",
              "value": "intelligentTiering"
            },
            {
              "name": "One Zone IA",
              "value": "onezoneIA"
            },
            {
              "name": "Reduced Redundancy",
              "value": "RecudedRedundancy"
            },
            {
              "name": "Standard",
              "value": "standard"
            },
            {
              "name": "Standard IA",
              "value": "standardIA"
            }
          ],
          "default": "standard",
          "description": "Amazon S3 storage classes"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Folder Key",
      "name": "folderKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "folder"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "folder"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Fetch Owner",
          "name": "fetchOwner",
          "type": "boolean",
          "default": false,
          "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true"
        },
        {
          "displayName": "Folder Key",
          "name": "folderKey",
          "type": "string",
          "default": ""
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "folder"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "download",
      "options": [
        {
          "name": "Copy",
          "value": "copy",
          "description": "Copy a file",
          "action": "Copy a file"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a file",
          "action": "Delete a file"
        },
        {
          "name": "Download",
          "value": "download",
          "description": "Download a file",
          "action": "Download a file"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many files",
          "action": "Get many files"
        },
        {
          "name": "Upload",
          "value": "upload",
          "description": "Upload a file",
          "action": "Upload a file"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Source Path",
      "name": "sourcePath",
      "type": "string",
      "default": "",
      "description": "The name of the source bucket should start with (/) and key name of the source object, separated by a slash (/)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "copy"
          ]
        }
      }
    },
    {
      "displayName": "Destination Path",
      "name": "destinationPath",
      "type": "string",
      "default": "",
      "description": "The name of the destination bucket and key name of the destination object, separated by a slash (/)",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "copy"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "ACL",
          "name": "acl",
          "type": "options",
          "options": [
            {
              "name": "Authenticated Read",
              "value": "authenticatedRead"
            },
            {
              "name": "AWS Exec Read",
              "value": "awsExecRead"
            },
            {
              "name": "Bucket Owner Full Control",
              "value": "bucketOwnerFullControl"
            },
            {
              "name": "Bucket Owner Read",
              "value": "bucketOwnerRead"
            },
            {
              "name": "Private",
              "value": "private"
            },
            {
              "name": "Public Read",
              "value": "publicRead"
            },
            {
              "name": "Public Read Write",
              "value": "publicReadWrite"
            }
          ],
          "default": "private",
          "description": "The canned ACL to apply to the object"
        },
        {
          "displayName": "Grant Full Control",
          "name": "grantFullControl",
          "type": "boolean",
          "default": false,
          "description": "Whether to give the grantee READ, READ_ACP, and WRITE_ACP permissions on the object"
        },
        {
          "displayName": "Grant Read",
          "name": "grantRead",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to read the object data and its metadata"
        },
        {
          "displayName": "Grant Read ACP",
          "name": "grantReadAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to read the object ACL"
        },
        {
          "displayName": "Grant Write ACP",
          "name": "grantWriteAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to write the ACL for the applicable object"
        },
        {
          "displayName": "Lock Legal Hold",
          "name": "lockLegalHold",
          "type": "boolean",
          "default": false,
          "description": "Whether a legal hold will be applied to this object"
        },
        {
          "displayName": "Lock Mode",
          "name": "lockMode",
          "type": "options",
          "options": [
            {
              "name": "Governance",
              "value": "governance"
            },
            {
              "name": "Compliance",
              "value": "compliance"
            }
          ],
          "default": "",
          "description": "The Object Lock mode that you want to apply to this object"
        },
        {
          "displayName": "Lock Retain Until Date",
          "name": "lockRetainUntilDate",
          "type": "dateTime",
          "default": "",
          "description": "The date and time when you want this object's Object Lock to expire"
        },
        {
          "displayName": "Metadata Directive",
          "name": "metadataDirective",
          "type": "options",
          "options": [
            {
              "name": "Copy",
              "value": "copy"
            },
            {
              "name": "Replace",
              "value": "replace"
            }
          ],
          "default": "",
          "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request"
        },
        {
          "displayName": "Requester Pays",
          "name": "requesterPays",
          "type": "boolean",
          "default": false,
          "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled."
        },
        {
          "displayName": "Server Side Encryption",
          "name": "serverSideEncryption",
          "type": "options",
          "options": [
            {
              "name": "AES256",
              "value": "AES256"
            },
            {
              "name": "AWS:KMS",
              "value": "aws:kms"
            }
          ],
          "default": "",
          "description": "The server-side encryption algorithm used when storing this object in Amazon S3"
        },
        {
          "displayName": "Server Side Encryption Context",
          "name": "serverSideEncryptionContext",
          "type": "string",
          "default": "",
          "description": "Specifies the AWS KMS Encryption Context to use for object encryption"
        },
        {
          "displayName": "Server Side Encryption AWS KMS Key ID",
          "name": "encryptionAwsKmsKeyId",
          "type": "string",
          "default": "",
          "description": "If x-amz-server-side-encryption is present and has the value of aws:kms"
        },
        {
          "displayName": "Server Side Encryption Customer Algorithm",
          "name": "serversideEncryptionCustomerAlgorithm",
          "type": "string",
          "default": "",
          "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256)"
        },
        {
          "displayName": "Server Side Encryption Customer Key",
          "name": "serversideEncryptionCustomerKey",
          "type": "string",
          "default": "",
          "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data"
        },
        {
          "displayName": "Server Side Encryption Customer Key MD5",
          "name": "serversideEncryptionCustomerKeyMD5",
          "type": "string",
          "default": "",
          "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321"
        },
        {
          "displayName": "Storage Class",
          "name": "storageClass",
          "type": "options",
          "options": [
            {
              "name": "Deep Archive",
              "value": "deepArchive"
            },
            {
              "name": "Glacier",
              "value": "glacier"
            },
            {
              "name": "Intelligent Tiering",
              "value": "intelligentTiering"
            },
            {
              "name": "One Zone IA",
              "value": "onezoneIA"
            },
            {
              "name": "Standard",
              "value": "standard"
            },
            {
              "name": "Standard IA",
              "value": "standardIA"
            }
          ],
          "default": "standard",
          "description": "Amazon S3 storage classes"
        },
        {
          "displayName": "Tagging Directive",
          "name": "taggingDirective",
          "type": "options",
          "options": [
            {
              "name": "Copy",
              "value": "copy"
            },
            {
              "name": "Replace",
              "value": "replace"
            }
          ],
          "default": "",
          "description": "Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "copy"
          ]
        }
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ]
        }
      }
    },
    {
      "displayName": "File Name",
      "name": "fileName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "displayName": "File Name",
      "name": "fileName",
      "type": "string",
      "default": "",
      "description": "If not set the binary data filename will be used",
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ],
          "binaryData": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Binary File",
      "name": "binaryData",
      "type": "boolean",
      "default": true,
      "description": "Whether the data to upload should be taken from binary field",
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "displayName": "File Content",
      "name": "fileContent",
      "type": "string",
      "default": "",
      "description": "The text content of the file to upload",
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "displayName": "Input Binary Field",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "upload"
          ],
          "resource": [
            "file"
          ],
          "binaryData": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "ACL",
          "name": "acl",
          "type": "options",
          "options": [
            {
              "name": "Authenticated Read",
              "value": "authenticatedRead"
            },
            {
              "name": "AWS Exec Read",
              "value": "awsExecRead"
            },
            {
              "name": "Bucket Owner Full Control",
              "value": "bucketOwnerFullControl"
            },
            {
              "name": "Bucket Owner Read",
              "value": "bucketOwnerRead"
            },
            {
              "name": "Private",
              "value": "private"
            },
            {
              "name": "Public Read",
              "value": "publicRead"
            },
            {
              "name": "Public Read Write",
              "value": "publicReadWrite"
            }
          ],
          "default": "private",
          "description": "The canned ACL to apply to the object"
        },
        {
          "displayName": "Grant Full Control",
          "name": "grantFullControl",
          "type": "boolean",
          "default": false,
          "description": "Whether to give the grantee READ, READ_ACP, and WRITE_ACP permissions on the object"
        },
        {
          "displayName": "Grant Read",
          "name": "grantRead",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to read the object data and its metadata"
        },
        {
          "displayName": "Grant Read ACP",
          "name": "grantReadAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to read the object ACL"
        },
        {
          "displayName": "Grant Write ACP",
          "name": "grantWriteAcp",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow grantee to write the ACL for the applicable object"
        },
        {
          "displayName": "Lock Legal Hold",
          "name": "lockLegalHold",
          "type": "boolean",
          "default": false,
          "description": "Whether a legal hold will be applied to this object"
        },
        {
          "displayName": "Lock Mode",
          "name": "lockMode",
          "type": "options",
          "options": [
            {
              "name": "Governance",
              "value": "governance"
            },
            {
              "name": "Compliance",
              "value": "compliance"
            }
          ],
          "default": "",
          "description": "The Object Lock mode that you want to apply to this object"
        },
        {
          "displayName": "Lock Retain Until Date",
          "name": "lockRetainUntilDate",
          "type": "dateTime",
          "default": "",
          "description": "The date and time when you want this object's Object Lock to expire"
        },
        {
          "displayName": "Parent Folder Key",
          "name": "parentFolderKey",
          "type": "string",
          "default": "",
          "description": "Parent folder you want to create the file in"
        },
        {
          "displayName": "Requester Pays",
          "name": "requesterPays",
          "type": "boolean",
          "default": false,
          "description": "Whether the requester will pay for requests and data transfer. While Requester Pays is enabled, anonymous access to this bucket is disabled."
        },
        {
          "displayName": "Server Side Encryption",
          "name": "serverSideEncryption",
          "type": "options",
          "options": [
            {
              "name": "AES256",
              "value": "AES256"
            },
            {
              "name": "AWS:KMS",
              "value": "aws:kms"
            }
          ],
          "default": "",
          "description": "The server-side encryption algorithm used when storing this object in Amazon S3"
        },
        {
          "displayName": "Server Side Encryption Context",
          "name": "serverSideEncryptionContext",
          "type": "string",
          "default": "",
          "description": "Specifies the AWS KMS Encryption Context to use for object encryption"
        },
        {
          "displayName": "Server Side Encryption AWS KMS Key ID",
          "name": "encryptionAwsKmsKeyId",
          "type": "string",
          "default": "",
          "description": "If x-amz-server-side-encryption is present and has the value of aws:kms"
        },
        {
          "displayName": "Server Side Encryption Customer Algorithm",
          "name": "serversideEncryptionCustomerAlgorithm",
          "type": "string",
          "default": "",
          "description": "Specifies the algorithm to use to when encrypting the object (for example, AES256)"
        },
        {
          "displayName": "Server Side Encryption Customer Key",
          "name": "serversideEncryptionCustomerKey",
          "type": "string",
          "default": "",
          "description": "Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data"
        },
        {
          "displayName": "Server Side Encryption Customer Key MD5",
          "name": "serversideEncryptionCustomerKeyMD5",
          "type": "string",
          "default": "",
          "description": "Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321"
        },
        {
          "displayName": "Storage Class",
          "name": "storageClass",
          "type": "options",
          "options": [
            {
              "name": "Deep Archive",
              "value": "deepArchive"
            },
            {
              "name": "Glacier",
              "value": "glacier"
            },
            {
              "name": "Intelligent Tiering",
              "value": "intelligentTiering"
            },
            {
              "name": "One Zone IA",
              "value": "onezoneIA"
            },
            {
              "name": "Standard",
              "value": "standard"
            },
            {
              "name": "Standard IA",
              "value": "standardIA"
            }
          ],
          "default": "standard",
          "description": "Amazon S3 storage classes"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ]
        }
      }
    },
    {
      "displayName": "Tags",
      "name": "tagsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "Optional extra headers to add to the message (most headers are allowed)",
      "options": [
        {
          "name": "tagsValues",
          "displayName": "Tag",
          "values": [
            {
              "displayName": "Key",
              "name": "key",
              "type": "string",
              "default": ""
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": ""
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "upload"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "download"
          ]
        }
      }
    },
    {
      "displayName": "File Key",
      "name": "fileKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "download"
          ]
        }
      }
    },
    {
      "displayName": "Put Output File in Field",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "required": true,
      "displayOptions": {
        "show": {
          "operation": [
            "download"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "File Key",
      "name": "fileKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Version ID",
          "name": "versionId",
          "type": "string",
          "default": ""
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Bucket Name",
      "name": "bucketName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "file"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "file"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Fetch Owner",
          "name": "fetchOwner",
          "type": "boolean",
          "default": false,
          "description": "The owner field is not present in listV2 by default, if you want to return owner field with each key in the result then set the fetch owner field to true"
        },
        {
          "displayName": "Folder Key",
          "name": "folderKey",
          "type": "string",
          "default": ""
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "file"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a bucket"
    },
    {
      "operation": "delete",
      "name": "Delete",
      "description": "Delete a bucket"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Get many buckets"
    },
    {
      "operation": "search",
      "name": "Search",
      "description": "Search within a bucket"
    }
  ],
  "credentials_required": [
    {
      "name": "s3",
      "required": true
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}