{
  "node_type": "nodes-langchain.vectorStorePGVector",
  "package_name": "@n8n/n8n-nodes-langchain",
  "display_name": "Postgres PGVector Store",
  "description": "Work with your data in Postgresql with the PGVector extension",
  "category": "transform",
  "development_style": "programmatic",
  "is_ai_tool": 0,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 1,
  "version": "1.3",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: PGVector Vector Store node documentation\ndescription: Learn how to use the PGVector Vector Store node in n8n. Follow technical documentation to integrate PGVector Vector Store node into your workflows.\npriority: medium\n---\n\n# PGVector Vector Store node\n\nPGVector is an extension of Postgresql. Use this node to interact with the PGVector tables in your Postgresql database. You can insert documents into a vector table, get documents from a vector table, retrieve documents to provide them to a retriever connected to a [chain](/glossary.md#ai-chain), or connect directly to an [agent](/glossary.md#ai-agent) as a [tool](/glossary.md#ai-tool).\n\nOn this page, you'll find the node parameters for the PGVector node, and links to more resources.\n\n/// note | Credentials\nYou can find authentication information for this node [here](/integrations/builtin/credentials/postgres.md).\n///\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/sub-node-expression-resolution.md\"\n\n## Node usage patterns\n\nYou can use the PGVector Vector Store node in the following patterns.\n\n### Use as a regular node to insert and retrieve documents\n\nYou can use the PGVector Vector Store as a regular node to insert or get documents. This pattern places the PGVector Vector Store in the regular connection flow without using an agent.\n\nYou can see an example of this in scenario 1 of [this template](https://n8n.io/workflows/2621-ai-agent-to-chat-with-files-in-supabase-storage/) (the template uses the Supabase Vector Store, but the pattern is the same).\n\n### Connect directly to an AI agent as a tool\n\nYou can connect the PGVector Vector Store node directly to the tool connector of an [AI agent](/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.agent/index.md) to use a vector store as a resource when answering queries.\n\nHere, the connection would be: AI agent (tools connector) -> PGVector Vector Store node.\n\n### Use a retriever to fetch documents\n\nYou can use the [Vector Store Retriever](/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.retrievervectorstore.md) node with the PGVector Vector Store node to fetch documents from the PGVector Vector Store node. This is often used with the [Question and Answer Chain](/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.chainretrievalqa/index.md) node to fetch documents from the vector store that match the given chat input.\n\nAn [example of the connection flow](https://n8n.io/workflows/1960-ask-questions-about-a-pdf-using-ai/) (the linked example uses Pinecone, but the pattern is the same) would be: Question and Answer Chain (Retriever connector) -> Vector Store Retriever (Vector Store connector) -> PGVector Vector Store.\n\n### Use the Vector Store Question Answer Tool to answer questions\n\nAnother pattern uses the [Vector Store Question Answer Tool](/integrations/builtin/cluster-nodes/sub-nodes/n8n-nodes-langchain.toolvectorstore.md) to summarize results and answer questions from the PGVector Vector Store node. Rather than connecting the PGVector Vector Store directly as a tool, this pattern uses a tool specifically designed to summarizes data in the vector store.\n\nThe [connections flow](https://n8n.io/workflows/2465-building-your-first-whatsapp-chatbot/) (the linked example uses the Simple Vector Store, but the pattern is the same) in this case would look like this: AI agent (tools connector) -> Vector Store Question Answer Tool (Vector Store connector) -> Simple Vector store.\n\n## Node parameters\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/vector-store-mode.md\"\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/vector-store-rerank-results.md\"\n\n<!-- vale off -->\n### Get Many parameters\n<!-- vale on -->\n\n* **Table name**: Enter the name of the table you want to query.\n* **Prompt**: Enter your search query.\n* **Limit**: Enter a number to set how many results to retrieve from the vector store. For example, set this to `10` to get the ten best results.\n\n### Insert Documents parameters\n\n* **Table name**: Enter the name of the table you want to query.\n\n### Retrieve Documents parameters (As Vector Store for Chain/Tool)\n\n* **Table name**: Enter the name of the table you want to query.\n\n### Retrieve Documents (As Tool for AI Agent) parameters\n\n* **Name**: The name of the vector store.\n* **Description**: Explain to the LLM what this tool does. A good, specific description allows LLMs to produce expected results more often.\n* **Table Name**: Enter the PGVector table to use.\n* **Limit**: Enter how many results to retrieve from the vector store. For example, set this to `10` to get the ten best results.\n\n## Node options\n\n### Collection\n\nA way to separate datasets in PGVector. This creates a separate table and column to keep track of which collection a vector belongs to.\n\n* **Use Collection**: Select whether to use a collection (turned on) or not (turned off).\n* **Collection Name**: Enter the name of the collection you want to use.\n* **Collection Table Name**: Enter the name of the table to store collection information in.\n\n### Column Names\n\nThe following options specify the names of the columns to store the vectors and corresponding information in:\n\n* **ID Column Name**\n* **Vector Column Name**\n* **Content Column Name**\n* **Metadata Column Name**\n\n### Metadata Filter\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/langchain-root-nodes/vector-store-metadata-filter.md\"\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'postgres-pgvector-store') ]]\n\n## Related resources\n\nRefer to [LangChain's PGVector documentation](https://js.langchain.com/docs/integrations/vectorstores/pgvector){:target=_blank .external-link} for more information about the service.\n\n--8<-- \"_snippets/integrations/builtin/cluster-nodes/langchain-overview-link.md\"\n\n--8<-- \"_snippets/self-hosting/starter-kits/self-hosted-ai-starter-kit.md\"\n",
  "properties_schema": [
    {
      "displayName": "Tip: Get a feel for vector stores in n8n with our",
      "name": "ragStarterCallout",
      "type": "callout",
      "default": "",
      "typeOptions": {
        "calloutAction": {
          "label": "RAG starter template",
          "type": "openRagStarterTemplate"
        }
      }
    },
    {
      "displayName": "Operation Mode",
      "name": "mode",
      "type": "options",
      "default": "retrieve",
      "options": [
        {
          "name": "Get Many",
          "value": "load",
          "description": "Get many ranked documents from vector store for query",
          "action": "Get ranked documents from vector store"
        },
        {
          "name": "Insert Documents",
          "value": "insert",
          "description": "Insert documents into vector store",
          "action": "Add documents to vector store"
        },
        {
          "name": "Retrieve Documents (As Vector Store for Chain/Tool)",
          "value": "retrieve",
          "description": "Retrieve documents from vector store to be used as vector store with AI nodes",
          "action": "Retrieve documents for Chain/Tool as Vector Store",
          "outputConnectionType": "ai_vectorStore"
        },
        {
          "name": "Retrieve Documents (As Tool for AI Agent)",
          "value": "retrieve-as-tool",
          "description": "Retrieve documents from vector store to be used as tool with AI nodes",
          "action": "Retrieve documents for AI Agent as Tool",
          "outputConnectionType": "ai_tool"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "This node must be connected to a vector store retriever. <a data-action='openSelectiveNodeCreator' data-action-parameter-connectiontype='ai_retriever'>Insert one</a>",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve"
          ]
        }
      },
      "typeOptions": {
        "containerClass": "ndv-connection-hint-notice"
      }
    },
    {
      "displayName": "Name",
      "name": "toolName",
      "type": "string",
      "default": "",
      "description": "Name of the vector store",
      "required": true,
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "lte": 1.2
              }
            }
          ],
          "mode": [
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Description",
      "name": "toolDescription",
      "type": "string",
      "default": "",
      "description": "Explain to the LLM what this tool does, a good, specific description would allow LLMs to produce expected results much more often",
      "required": true,
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve-as-tool"
          ]
        }
      },
      "typeOptions": {
        "rows": 2
      }
    },
    {
      "displayName": "Table Name",
      "name": "tableName",
      "type": "string",
      "default": "n8n_vectors",
      "description": "The table name to store the vectors in. If table does not exist, it will be created."
    },
    {
      "displayName": "Embedding Batch Size",
      "name": "embeddingBatchSize",
      "type": "number",
      "default": 200,
      "description": "Number of documents to embed in a single batch",
      "displayOptions": {
        "show": {
          "mode": [
            "insert"
          ],
          "@version": [
            {
              "_cnd": {
                "gte": 1.1
              }
            }
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Collection",
          "name": "collection",
          "type": "fixedCollection",
          "description": "Collection of vectors",
          "default": {
            "values": {
              "useCollection": false,
              "collectionName": "n8n",
              "collectionTable": "n8n_vector_collections"
            }
          },
          "typeOptions": {},
          "placeholder": "Add Collection Settings",
          "options": [
            {
              "name": "values",
              "displayName": "Collection Settings",
              "values": [
                {
                  "displayName": "Use Collection",
                  "name": "useCollection",
                  "type": "boolean",
                  "default": false
                },
                {
                  "displayName": "Collection Name",
                  "name": "collectionName",
                  "type": "string",
                  "default": "n8n",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                },
                {
                  "displayName": "Collection Table Name",
                  "name": "collectionTableName",
                  "type": "string",
                  "default": "n8n_vector_collections",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "displayName": "Column Names",
          "name": "columnNames",
          "type": "fixedCollection",
          "description": "The names of the columns in the PGVector table",
          "default": {
            "values": {
              "idColumnName": "id",
              "vectorColumnName": "embedding",
              "contentColumnName": "text",
              "metadataColumnName": "metadata"
            }
          },
          "typeOptions": {},
          "placeholder": "Set Column Names",
          "options": [
            {
              "name": "values",
              "displayName": "Column Name Settings",
              "values": [
                {
                  "displayName": "ID Column Name",
                  "name": "idColumnName",
                  "type": "string",
                  "default": "id",
                  "required": true
                },
                {
                  "displayName": "Vector Column Name",
                  "name": "vectorColumnName",
                  "type": "string",
                  "default": "embedding",
                  "required": true
                },
                {
                  "displayName": "Content Column Name",
                  "name": "contentColumnName",
                  "type": "string",
                  "default": "text",
                  "required": true
                },
                {
                  "displayName": "Metadata Column Name",
                  "name": "metadataColumnName",
                  "type": "string",
                  "default": "metadata",
                  "required": true
                }
              ]
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "mode": [
            "insert"
          ]
        }
      }
    },
    {
      "displayName": "Prompt",
      "name": "prompt",
      "type": "string",
      "default": "",
      "description": "Search prompt to retrieve matching documents from the vector store using similarity-based ranking",
      "required": true,
      "displayOptions": {
        "show": {
          "mode": [
            "load"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "topK",
      "type": "number",
      "default": 4,
      "description": "Number of top results to fetch from vector store",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Include Metadata",
      "name": "includeDocumentMetadata",
      "type": "boolean",
      "default": true,
      "description": "Whether or not to include document metadata",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Rerank Results",
      "name": "useReranker",
      "type": "boolean",
      "default": false,
      "description": "Whether or not to rerank results",
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "ID",
      "name": "id",
      "type": "string",
      "default": "",
      "description": "ID of an embedding entry",
      "required": true,
      "displayOptions": {
        "show": {
          "mode": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Distance Strategy",
          "name": "distanceStrategy",
          "type": "options",
          "default": "cosine",
          "description": "The method to calculate the distance between two vectors",
          "options": [
            {
              "name": "Cosine",
              "value": "cosine"
            },
            {
              "name": "Inner Product",
              "value": "innerProduct"
            },
            {
              "name": "Euclidean",
              "value": "euclidean"
            }
          ]
        },
        {
          "displayName": "Collection",
          "name": "collection",
          "type": "fixedCollection",
          "description": "Collection of vectors",
          "default": {
            "values": {
              "useCollection": false,
              "collectionName": "n8n",
              "collectionTable": "n8n_vector_collections"
            }
          },
          "typeOptions": {},
          "placeholder": "Add Collection Settings",
          "options": [
            {
              "name": "values",
              "displayName": "Collection Settings",
              "values": [
                {
                  "displayName": "Use Collection",
                  "name": "useCollection",
                  "type": "boolean",
                  "default": false
                },
                {
                  "displayName": "Collection Name",
                  "name": "collectionName",
                  "type": "string",
                  "default": "n8n",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                },
                {
                  "displayName": "Collection Table Name",
                  "name": "collectionTableName",
                  "type": "string",
                  "default": "n8n_vector_collections",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "displayName": "Column Names",
          "name": "columnNames",
          "type": "fixedCollection",
          "description": "The names of the columns in the PGVector table",
          "default": {
            "values": {
              "idColumnName": "id",
              "vectorColumnName": "embedding",
              "contentColumnName": "text",
              "metadataColumnName": "metadata"
            }
          },
          "typeOptions": {},
          "placeholder": "Set Column Names",
          "options": [
            {
              "name": "values",
              "displayName": "Column Name Settings",
              "values": [
                {
                  "displayName": "ID Column Name",
                  "name": "idColumnName",
                  "type": "string",
                  "default": "id",
                  "required": true
                },
                {
                  "displayName": "Vector Column Name",
                  "name": "vectorColumnName",
                  "type": "string",
                  "default": "embedding",
                  "required": true
                },
                {
                  "displayName": "Content Column Name",
                  "name": "contentColumnName",
                  "type": "string",
                  "default": "text",
                  "required": true
                },
                {
                  "displayName": "Metadata Column Name",
                  "name": "metadataColumnName",
                  "type": "string",
                  "default": "metadata",
                  "required": true
                }
              ]
            }
          ]
        },
        {
          "displayName": "Metadata Filter",
          "name": "metadata",
          "type": "fixedCollection",
          "description": "Metadata to filter the document by",
          "typeOptions": {
            "multipleValues": true
          },
          "default": {},
          "placeholder": "Add filter field",
          "options": [
            {
              "name": "metadataValues",
              "displayName": "Fields to Set",
              "values": [
                {
                  "displayName": "Name",
                  "name": "name",
                  "type": "string",
                  "default": "",
                  "required": true
                },
                {
                  "displayName": "Value",
                  "name": "value",
                  "type": "string",
                  "default": ""
                }
              ]
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "mode": [
            "load",
            "retrieve-as-tool"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Distance Strategy",
          "name": "distanceStrategy",
          "type": "options",
          "default": "cosine",
          "description": "The method to calculate the distance between two vectors",
          "options": [
            {
              "name": "Cosine",
              "value": "cosine"
            },
            {
              "name": "Inner Product",
              "value": "innerProduct"
            },
            {
              "name": "Euclidean",
              "value": "euclidean"
            }
          ]
        },
        {
          "displayName": "Collection",
          "name": "collection",
          "type": "fixedCollection",
          "description": "Collection of vectors",
          "default": {
            "values": {
              "useCollection": false,
              "collectionName": "n8n",
              "collectionTable": "n8n_vector_collections"
            }
          },
          "typeOptions": {},
          "placeholder": "Add Collection Settings",
          "options": [
            {
              "name": "values",
              "displayName": "Collection Settings",
              "values": [
                {
                  "displayName": "Use Collection",
                  "name": "useCollection",
                  "type": "boolean",
                  "default": false
                },
                {
                  "displayName": "Collection Name",
                  "name": "collectionName",
                  "type": "string",
                  "default": "n8n",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                },
                {
                  "displayName": "Collection Table Name",
                  "name": "collectionTableName",
                  "type": "string",
                  "default": "n8n_vector_collections",
                  "required": true,
                  "displayOptions": {
                    "show": {
                      "useCollection": [
                        true
                      ]
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "displayName": "Column Names",
          "name": "columnNames",
          "type": "fixedCollection",
          "description": "The names of the columns in the PGVector table",
          "default": {
            "values": {
              "idColumnName": "id",
              "vectorColumnName": "embedding",
              "contentColumnName": "text",
              "metadataColumnName": "metadata"
            }
          },
          "typeOptions": {},
          "placeholder": "Set Column Names",
          "options": [
            {
              "name": "values",
              "displayName": "Column Name Settings",
              "values": [
                {
                  "displayName": "ID Column Name",
                  "name": "idColumnName",
                  "type": "string",
                  "default": "id",
                  "required": true
                },
                {
                  "displayName": "Vector Column Name",
                  "name": "vectorColumnName",
                  "type": "string",
                  "default": "embedding",
                  "required": true
                },
                {
                  "displayName": "Content Column Name",
                  "name": "contentColumnName",
                  "type": "string",
                  "default": "text",
                  "required": true
                },
                {
                  "displayName": "Metadata Column Name",
                  "name": "metadataColumnName",
                  "type": "string",
                  "default": "metadata",
                  "required": true
                }
              ]
            }
          ]
        },
        {
          "displayName": "Metadata Filter",
          "name": "metadata",
          "type": "fixedCollection",
          "description": "Metadata to filter the document by",
          "typeOptions": {
            "multipleValues": true
          },
          "default": {},
          "placeholder": "Add filter field",
          "options": [
            {
              "name": "metadataValues",
              "displayName": "Fields to Set",
              "values": [
                {
                  "displayName": "Name",
                  "name": "name",
                  "type": "string",
                  "default": "",
                  "required": true
                },
                {
                  "displayName": "Value",
                  "name": "value",
                  "type": "string",
                  "default": ""
                }
              ]
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "mode": [
            "retrieve"
          ]
        }
      }
    }
  ],
  "operations": [],
  "credentials_required": [
    {
      "name": "postgres",
      "required": true,
      "testedBy": "postgresConnectionTest"
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}