{
  "node_type": "nodes-base.cockpit",
  "package_name": "n8n-nodes-base",
  "display_name": "Cockpit",
  "description": "Consume Cockpit API",
  "category": "output",
  "development_style": "programmatic",
  "is_ai_tool": 1,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 0,
  "version": "1",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Cockpit node documentation\ndescription: Learn how to use the Cockpit node in n8n. Follow technical documentation to integrate Cockpit node into your workflows.\ncontentType: [integration, reference]\n---\n\n# Cockpit node\n\nUse the Cockpit node to automate work in Cockpit, and integrate Cockpit with other applications. n8n has built-in support for a wide range of Cockpit features, including creating a collection entry, storing data from a form submission, and getting singletons.\n\nOn this page, you'll find a list of operations the Cockpit node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Cockpit credentials](/integrations/builtin/credentials/cockpit.md) for guidance on setting up authentication. \n///\n\n## Operations\n\n* Collection\n    * Create a collection entry\n    * Get all collection entries\n    * Update a collection entry\n* Form\n    * Store data from a form submission\n* Singleton\n    * Get a singleton\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'cockpit') ]]\n",
  "properties_schema": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "collection",
      "options": [
        {
          "name": "Collection",
          "value": "collection"
        },
        {
          "name": "Form",
          "value": "form"
        },
        {
          "name": "Singleton",
          "value": "singleton"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getAll",
      "options": [
        {
          "name": "Create an Entry",
          "value": "create",
          "description": "Create a collection entry",
          "action": "Create a collection entry"
        },
        {
          "name": "Get Many Entries",
          "value": "getAll",
          "description": "Get many collection entries",
          "action": "Get many collection entries"
        },
        {
          "name": "Update an Entry",
          "value": "update",
          "description": "Update a collection entry",
          "action": "Update a collection entry"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Collection Name or ID",
      "name": "collection",
      "type": "options",
      "default": "",
      "description": "Name of the collection to operate on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "getCollections"
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "collection"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "collection"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 500
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Fields",
          "name": "fields",
          "type": "string",
          "default": "",
          "placeholder": "_id,name",
          "description": "Comma-separated list of fields to get"
        },
        {
          "displayName": "Filter Query",
          "name": "filter",
          "type": "json",
          "default": "",
          "typeOptions": {
            "alwaysOpenEditWindow": true
          },
          "placeholder": "{\"name\": \"Jim\"}",
          "description": "Filter query in <a href=\"https://jeroen.github.io/mongolite/query-data.html\">Mongolite format</a>"
        },
        {
          "displayName": "Language",
          "name": "language",
          "type": "string",
          "default": "",
          "description": "Return normalized language fields"
        },
        {
          "displayName": "Populate",
          "name": "populate",
          "type": "boolean",
          "default": true,
          "description": "Whether to resolve linked collection items"
        },
        {
          "displayName": "RAW Data",
          "name": "rawData",
          "type": "boolean",
          "default": false,
          "description": "Whether to return the data exactly in the way it got received from the API"
        },
        {
          "displayName": "Skip",
          "name": "skip",
          "type": "number",
          "default": "",
          "description": "Skip number of entries"
        },
        {
          "displayName": "Sort Query",
          "name": "sort",
          "type": "json",
          "default": "",
          "placeholder": "{\"price\": -1}",
          "description": "Sort query in <a href=\"https://jeroen.github.io/mongolite/query-data.html\">Mongolite format</a>"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Entry ID",
      "name": "id",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "JSON Data Fields",
      "name": "jsonDataFields",
      "type": "boolean",
      "default": false,
      "description": "Whether new entry fields should be set via the value-key pair UI or JSON",
      "displayOptions": {
        "show": {
          "resource": [
            "collection"
          ],
          "operation": [
            "create",
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Entry Data",
      "name": "dataFieldsJson",
      "type": "json",
      "default": "",
      "description": "Entry data to send as JSON",
      "displayOptions": {
        "show": {
          "jsonDataFields": [
            true
          ],
          "resource": [
            "collection"
          ],
          "operation": [
            "create",
            "update"
          ]
        }
      },
      "typeOptions": {
        "alwaysOpenEditWindow": true
      }
    },
    {
      "displayName": "Entry Data",
      "name": "dataFieldsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "Entry data to send",
      "options": [
        {
          "displayName": "Field",
          "name": "field",
          "values": [
            {
              "displayName": "Name",
              "name": "name",
              "type": "string",
              "default": "",
              "description": "Name of the field"
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": "",
              "description": "Value of the field"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "jsonDataFields": [
            false
          ],
          "resource": [
            "collection"
          ],
          "operation": [
            "create",
            "update"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "submit",
      "options": [
        {
          "name": "Submit a Form",
          "value": "submit",
          "description": "Store data from a form submission",
          "action": "Submit a form"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Form",
      "name": "form",
      "type": "string",
      "default": "",
      "description": "Name of the form to operate on",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ]
        }
      }
    },
    {
      "displayName": "JSON Data Fields",
      "name": "jsonDataFields",
      "type": "boolean",
      "default": false,
      "description": "Whether form fields should be set via the value-key pair UI or JSON",
      "displayOptions": {
        "show": {
          "resource": [
            "form"
          ],
          "operation": [
            "submit"
          ]
        }
      }
    },
    {
      "displayName": "Form Data",
      "name": "dataFieldsJson",
      "type": "json",
      "default": "",
      "description": "Form data to send as JSON",
      "displayOptions": {
        "show": {
          "jsonDataFields": [
            true
          ],
          "resource": [
            "form"
          ],
          "operation": [
            "submit"
          ]
        }
      },
      "typeOptions": {
        "alwaysOpenEditWindow": true
      }
    },
    {
      "displayName": "Form Data",
      "name": "dataFieldsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "Form data to send",
      "options": [
        {
          "displayName": "Field",
          "name": "field",
          "values": [
            {
              "displayName": "Name",
              "name": "name",
              "type": "string",
              "default": "",
              "description": "Name of the field"
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": "",
              "description": "Value of the field"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "jsonDataFields": [
            false
          ],
          "resource": [
            "form"
          ],
          "operation": [
            "submit"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "get",
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get a singleton",
          "action": "Get a singleton"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "singleton"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Singleton Name or ID",
      "name": "singleton",
      "type": "options",
      "default": "",
      "description": "Name of the singleton to operate on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "singleton"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsMethod": "getSingletons"
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create an Entry",
      "description": "Create a collection entry"
    },
    {
      "operation": "getAll",
      "name": "Get Many Entries",
      "description": "Get many collection entries"
    },
    {
      "operation": "update",
      "name": "Update an Entry",
      "description": "Update a collection entry"
    }
  ],
  "credentials_required": [
    {
      "name": "cockpitApi",
      "required": true
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}