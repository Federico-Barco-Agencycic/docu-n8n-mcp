{
  "node_type": "nodes-base.airtable",
  "package_name": "n8n-nodes-base",
  "display_name": "Airtable",
  "description": "Read, update, write and delete data from Airtable",
  "category": "input",
  "development_style": "programmatic",
  "is_ai_tool": 1,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 1,
  "version": "2.1",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Airtable node documentation\ndescription: Learn how to use the Airtable node in n8n. Follow technical documentation to integrate Airtable node into your workflows.\ncontentType: [integration, reference]\npriority: high\n---\n\n# Airtable node\n\nUse the Airtable node to automate work in Airtable, and integrate Airtable with other applications. n8n has built-in support for a wide range of Airtable features, including creating, reading, listing, updating and deleting tables.\n\nOn this page, you'll find a list of operations the Airtable node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Airtable credentials](/integrations/builtin/credentials/airtable.md) for guidance on setting up authentication. \n///\n\n## Operations\n\n* Append the data to a table\n* Delete data from a table\n* List data from a table\n* Read data from a table\n* Update data in a table\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'airtable') ]]\n\n## Related resources\n\nn8n provides a trigger node for Airtable. You can find the trigger node docs [here](/integrations/builtin/trigger-nodes/n8n-nodes-base.airtabletrigger.md).\n\nRefer to [Airtable's documentation](https://airtable.com/developers/web/api/introduction){:target=_blank .external-link} for more information about the service.\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/operation-not-supported.md\"\n\n\n## Node reference\n\n### Get the Record ID\n\nTo fetch data for a particular record, you need the Record ID. There are two ways to get the Record ID.\n\n### Create a Record ID column in Airtable\n\nTo create a `Record ID` column in your table, refer to this [article](https://support.airtable.com/docs/finding-airtable-ids){:target=_blank .external-link}. You can then use this Record ID in your Airtable node.\n\n### Use the List operation\n\nTo get the Record ID of your record, you can use the **List** operation of the Airtable node. This operation will return the Record ID along with the fields. You can then use this Record ID in your Airtable node.\n\n### Filter records when using the List operation\n\nTo filter records from your Airtable base, use the **Filter By Formula** option. For example, if you want to return all the users that belong to the organization `n8n`, follow the steps mentioned below:\n\n1. Select 'List' from the **Operation** dropdown list.\n2. Enter the base ID and the table name in the **Base ID** and **Table** field, respectively.\n3. Click on **Add Option** and select 'Filter By Formula' from the dropdown list.\n4. Enter the following formula in the **Filter By Formula** field: `{Organization}='n8n'`.\n\nSimilarly, if you want to return all the users that don't belong to the organization `n8n`, use the following formula: `NOT({Organization}='n8n')`.\n\nRefer to the Airtable [documentation](https://support.airtable.com/hc/en-us/articles/203255215-Formula-Field-Reference){:target=_balnk .external-link} to learn more about the formulas.\n\n## Common issues\n\nFor common errors or issues and suggested resolution steps, refer to [Common Issues](/integrations/builtin/app-nodes/n8n-nodes-base.airtable/common-issues.md).\n",
  "properties_schema": [
    {
      "displayName": "Authentication",
      "name": "authentication",
      "type": "options",
      "default": "airtableTokenApi",
      "options": [
        {
          "name": "Access Token",
          "value": "airtableTokenApi"
        },
        {
          "name": "OAuth2",
          "value": "airtableOAuth2Api"
        }
      ]
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "record",
      "options": [
        {
          "name": "Base",
          "value": "base"
        },
        {
          "name": "Record",
          "value": "record"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "get",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new record in a table",
          "action": "Create a record"
        },
        {
          "name": "Create or Update",
          "value": "upsert",
          "description": "Create a new record, or update the current one if it already exists (upsert)",
          "action": "Create or update a record"
        },
        {
          "name": "Delete",
          "value": "deleteRecord",
          "description": "Delete a record from a table",
          "action": "Delete a record"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a record from a table",
          "action": "Get a record"
        },
        {
          "name": "Search",
          "value": "search",
          "description": "Search for specific records or list all",
          "action": "Search records"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a record in a table",
          "action": "Update record"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Base",
      "name": "base",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      }
    },
    {
      "displayName": "Table",
      "name": "table",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "base.value"
        ]
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumns",
          "mode": "add",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Record ID",
      "name": "id",
      "type": "string",
      "default": "",
      "description": "ID of the record to delete. <a href=\"https://support.airtable.com/docs/record-id\" target=\"_blank\">More info</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "deleteRecord"
          ]
        }
      }
    },
    {
      "displayName": "Record ID",
      "name": "id",
      "type": "string",
      "default": "",
      "description": "ID of the record to get. <a href=\"https://support.airtable.com/docs/record-id\" target=\"_blank\">More info</a>.",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "description": "Additional options which decide which records should be returned",
      "options": [
        {
          "displayName": "Download Attachments",
          "name": "downloadFields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getAttachmentColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields of type 'attachment' that should be downloaded"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Filter By Formula",
      "name": "filterByFormula",
      "type": "string",
      "default": "",
      "description": "The formula will be evaluated for each record, and if the result is not 0, false, \"\", NaN, [], or #Error! the record will be included in the response. <a href=\"https://support.airtable.com/docs/formula-field-reference\" target=\"_blank\">More info</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": true,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "description": "Additional options which decide which records should be returned",
      "options": [
        {
          "displayName": "Download Attachments",
          "name": "downloadFields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getAttachmentColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields of type 'attachment' that should be downloaded"
        },
        {
          "displayName": "Output Fields",
          "name": "fields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields you want to include in the output"
        },
        {
          "displayName": "View",
          "name": "view",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "typeOptions": {
                "searchListMethod": "viewSearch",
                "searchable": true
              }
            },
            {
              "displayName": "By URL",
              "name": "url",
              "type": "string",
              "placeholder": "https://airtable.com/app12DiScdfes/tblAAAAAAAAAAAAA/viwHdfasdfeieg5p",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})/.*",
                    "errorMessage": "Not a valid Airtable View URL"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})"
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "[a-zA-Z0-9]{2,}",
                    "errorMessage": "Not a valid Airtable View ID"
                  }
                }
              ],
              "placeholder": "viw3dirwqeidke"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Sort",
      "name": "sort",
      "type": "fixedCollection",
      "default": {},
      "description": "Defines how the returned records should be ordered",
      "options": [
        {
          "name": "property",
          "displayName": "Property",
          "values": [
            {
              "displayName": "Field",
              "name": "field",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "base.value",
                  "table.value"
                ]
              },
              "default": "",
              "description": "Name of the field to sort on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            },
            {
              "displayName": "Direction",
              "name": "direction",
              "type": "options",
              "options": [
                {
                  "name": "ASC",
                  "value": "asc",
                  "description": "Sort in ascending order (small -> large)"
                },
                {
                  "name": "DESC",
                  "value": "desc",
                  "description": "Sort in descending order (large -> small)"
                }
              ],
              "default": "asc",
              "description": "The sort direction"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumnsWithRecordId",
          "mode": "update",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "upsert"
          ]
        }
      },
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumnsWithRecordId",
          "mode": "update",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "upsert"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "getMany",
      "options": [
        {
          "name": "Get Many",
          "value": "getMany",
          "description": "List all the bases",
          "action": "Get many bases"
        },
        {
          "name": "Get Schema",
          "value": "getSchema",
          "description": "Get the schema of the tables in a base",
          "action": "Get base schema"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": true,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 100,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Permission Level",
          "name": "permissionLevel",
          "type": "multiOptions",
          "options": [
            {
              "name": "Comment",
              "value": "comment"
            },
            {
              "name": "Create",
              "value": "create"
            },
            {
              "name": "Edit",
              "value": "edit"
            },
            {
              "name": "None",
              "value": "none"
            },
            {
              "name": "Read",
              "value": "read"
            }
          ],
          "default": [],
          "description": "Filter the returned bases by one or more permission levels"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      }
    },
    {
      "displayName": "Base",
      "name": "base",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "description": "The Airtable Base to retrieve the schema from",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getSchema"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a new record in a table"
    },
    {
      "operation": "upsert",
      "name": "Create or Update",
      "description": "Create a new record, or update the current one if it already exists (upsert)"
    },
    {
      "operation": "deleteRecord",
      "name": "Delete",
      "description": "Delete a record from a table"
    },
    {
      "operation": "get",
      "name": "Get",
      "description": "Retrieve a record from a table"
    },
    {
      "operation": "search",
      "name": "Search",
      "description": "Search for specific records or list all"
    },
    {
      "operation": "update",
      "name": "Update",
      "description": "Update a record in a table"
    }
  ],
  "credentials_required": [
    {
      "name": "airtableTokenApi",
      "required": true,
      "displayOptions": {
        "show": {
          "authentication": [
            "airtableTokenApi"
          ]
        }
      }
    },
    {
      "name": "airtableOAuth2Api",
      "required": true,
      "displayOptions": {
        "show": {
          "authentication": [
            "airtableOAuth2Api"
          ]
        }
      }
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}