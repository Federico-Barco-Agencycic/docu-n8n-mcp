{
  "node_type": "nodes-base.jira",
  "package_name": "n8n-nodes-base",
  "display_name": "Jira Software",
  "description": "Consume Jira Software API",
  "category": "output",
  "development_style": "programmatic",
  "is_ai_tool": 1,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 0,
  "version": "1",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Jira Software node documentation\ndescription: Learn how to use the Jira Software node in n8n. Follow technical documentation to integrate Jira Software node into your workflows.\ncontentType: [integration, reference]\npriority: medium\n---\n\n# Jira Software node\n\nUse the Jira Software node to automate work in Jira, and integrate Jira with other applications. n8n has built-in support for a wide range of Jira features, including creating, updating, deleting, and getting issues, and users. \n\nOn this page, you'll find a list of operations the Jira Software node supports and links to more resources.\n\n/// note | Credentials\nRefer to [Jira credentials](/integrations/builtin/credentials/jira.md) for guidance on setting up authentication. \n///\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/ai-tools.md\"\n\n## Operations\n\n* Issue\n    * Get issue changelog\n    * Create a new issue\n    * Delete an issue\n    * Get an issue\n    * Get all issues\n    * Create an email notification for an issue and add it to the mail queue\n    * Return either all transitions or a transition that can be performed by the user on an issue, based on the issue's status\n    * Update an issue\n* Issue Attachment\n    * Add attachment to issue\n    * Get an attachment\n    * Get all attachments\n    * Remove an attachment\n* Issue Comment\n    * Add comment to issue\n    * Get a comment\n    * Get all comments\n    * Remove a comment\n    * Update a comment\n* User\n    * Create a new user.\n    * Delete a user.\n    * Retrieve a user.\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'jira-software') ]]\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/operation-not-supported.md\"\n\n## Related resources\n\nRefer to the [official JQL documentation](https://www.atlassian.com/software/jira/guides/expand-jira/jql) about Jira Query Language (JQL) to learn more about it.\n\n## Fetch issues for a specific project\n\nThe **Get All** operation returns all the issues from Jira. To fetch issues for a particular project, you need to use Jira Query Language (JQL).\n\nFor example, if you want to receive all the issues of a project named `n8n`, you'd do something like this:\n\n- Select **Get All** from the **Operation** dropdown list.\n- Toggle **Return All** to true.\n- Select **Add Option** and select **JQL**.\n- Enter `project=n8n` in the **JQL** field.\n\nThis query will fetch all the issues in the project named `n8n`. Enter the name of your project instead of `n8n` to fetch all the issues for your project.\n",
  "properties_schema": [
    {
      "displayName": "Jira Version",
      "name": "jiraVersion",
      "type": "options",
      "default": "cloud",
      "options": [
        {
          "name": "Cloud",
          "value": "cloud"
        },
        {
          "name": "Server (Self Hosted)",
          "value": "server"
        },
        {
          "name": "Server Pat (Self Hosted)",
          "value": "serverPat"
        }
      ]
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "default": "issue",
      "options": [
        {
          "name": "Issue",
          "value": "issue",
          "description": "Creates an issue or, where the option to create subtasks is enabled in Jira, a subtask"
        },
        {
          "name": "Issue Attachment",
          "value": "issueAttachment",
          "description": "Add, remove, and get an attachment from an issue"
        },
        {
          "name": "Issue Comment",
          "value": "issueComment",
          "description": "Get, create, update, and delete a comment from an issue"
        },
        {
          "name": "User",
          "value": "user",
          "description": "Get, create and delete a user"
        }
      ],
      "noDataExpression": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Changelog",
          "value": "changelog",
          "description": "Get issue changelog",
          "action": "Get an issue changelog"
        },
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new issue",
          "action": "Create an issue"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete an issue",
          "action": "Delete an issue"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get an issue",
          "action": "Get an issue"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many issues",
          "action": "Get many issues"
        },
        {
          "name": "Notify",
          "value": "notify",
          "description": "Create an email notification for an issue and add it to the mail queue",
          "action": "Create an email notification for an issue"
        },
        {
          "name": "Status",
          "value": "transitions",
          "description": "Return either all transitions or a transition that can be performed by the user on an issue, based on the issue's status",
          "action": "Get the status of an issue"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update an issue",
          "action": "Update an issue"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Project",
      "name": "project",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Issue Type",
      "name": "issueType",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Summary",
      "name": "summary",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Assignee",
          "name": "assignee",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Assignee",
              "name": "list",
              "type": "list",
              "placeholder": "Select an Assignee...",
              "typeOptions": {
                "searchListMethod": "getUsers",
                "searchable": true
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "62971ebae540870069668714",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([-:a-z0-9]{2,})[ \t]*",
                    "errorMessage": "Not a valid Jira Assignee ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([-:a-z0-9]{2,})"
              }
            }
          ]
        },
        {
          "displayName": "Description",
          "name": "description",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Component Names or IDs",
          "name": "componentIds",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getProjectComponents",
            "loadOptionsDependsOn": [
              "project"
            ]
          },
          "default": []
        },
        {
          "displayName": "Custom Fields",
          "name": "customFieldsUi",
          "type": "fixedCollection",
          "default": {},
          "placeholder": "Add Custom Field",
          "typeOptions": {
            "multipleValues": true
          },
          "options": [
            {
              "name": "customFieldsValues",
              "displayName": "Custom Field",
              "values": [
                {
                  "displayName": "Field",
                  "name": "fieldId",
                  "type": "resourceLocator",
                  "default": {
                    "mode": "list",
                    "value": ""
                  },
                  "modes": [
                    {
                      "displayName": "Field",
                      "name": "list",
                      "type": "list",
                      "placeholder": "Select a Field...",
                      "typeOptions": {
                        "searchListMethod": "getCustomFields"
                      }
                    },
                    {
                      "displayName": "ID",
                      "name": "id",
                      "type": "string",
                      "placeholder": "customfield_10035",
                      "validation": [
                        {
                          "type": "regex",
                          "properties": {
                            "regex": "(customfield_[0-9]{2,})[ \t]*",
                            "errorMessage": "Not a valid Jira Field ID"
                          }
                        }
                      ],
                      "extractValue": {
                        "type": "regex",
                        "regex": "^(customfield_[0-9]{2,})"
                      }
                    }
                  ]
                },
                {
                  "displayName": "Field Value",
                  "name": "fieldValue",
                  "type": "string",
                  "description": "Value of the field to set",
                  "default": ""
                }
              ]
            }
          ]
        },
        {
          "displayName": "Label Names or IDs",
          "name": "labels",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getLabels"
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "cloud"
              ]
            }
          }
        },
        {
          "displayName": "Labels",
          "name": "serverLabels",
          "type": "string",
          "default": [],
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "server"
              ]
            }
          },
          "typeOptions": {
            "multipleValues": true
          }
        },
        {
          "displayName": "Parent Issue Key",
          "name": "parentIssueKey",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Priority",
          "name": "priority",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Priority",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Priority...",
              "typeOptions": {
                "searchListMethod": "getPriorities"
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "1",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([0-9]{1,})[ \t]*",
                    "errorMessage": "Not a valid Jira Priority ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9]{1,})"
              }
            }
          ]
        },
        {
          "displayName": "Reporter",
          "name": "reporter",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Reporter",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Reporter...",
              "typeOptions": {
                "searchListMethod": "getUsers",
                "searchable": true
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "62971ebae540870069668714",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([-:a-z0-9]{2,})[ \t]*",
                    "errorMessage": "Not a valid Jira Reporter ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([-:a-z0-9]{2,})"
              }
            }
          ]
        },
        {
          "displayName": "Update History",
          "name": "updateHistory",
          "type": "boolean",
          "default": false,
          "description": "Whether the project in which the issue is created is added to the user's Recently viewed project list, as shown under Projects in Jira"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Update Fields",
      "name": "updateFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Assignee",
          "name": "assignee",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Assignee",
              "name": "list",
              "type": "list",
              "placeholder": "Select an Assignee...",
              "typeOptions": {
                "searchListMethod": "getUsers",
                "searchable": true
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "62971ebae540870069668714",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([-:a-z0-9]{2,})[ \t]*",
                    "errorMessage": "Not a valid Jira Assignee ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([-:a-z0-9]{2,})"
              }
            }
          ]
        },
        {
          "displayName": "Description",
          "name": "description",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Custom Fields",
          "name": "customFieldsUi",
          "type": "fixedCollection",
          "default": {},
          "placeholder": "Add Custom Field",
          "typeOptions": {
            "multipleValues": true
          },
          "options": [
            {
              "name": "customFieldsValues",
              "displayName": "Custom Field",
              "values": [
                {
                  "displayName": "Field",
                  "name": "fieldId",
                  "type": "resourceLocator",
                  "default": {
                    "mode": "list",
                    "value": ""
                  },
                  "modes": [
                    {
                      "displayName": "Field",
                      "name": "list",
                      "type": "list",
                      "placeholder": "Select a Field...",
                      "typeOptions": {
                        "searchListMethod": "getCustomFields"
                      }
                    },
                    {
                      "displayName": "ID",
                      "name": "id",
                      "type": "string",
                      "placeholder": "customfield_10035",
                      "validation": [
                        {
                          "type": "regex",
                          "properties": {
                            "regex": "(customfield_[0-9]{2,})[ \t]*",
                            "errorMessage": "Not a valid Jira Field ID"
                          }
                        }
                      ],
                      "extractValue": {
                        "type": "regex",
                        "regex": "^(customfield_[0-9]{2,})"
                      }
                    }
                  ]
                },
                {
                  "displayName": "Field Value",
                  "name": "fieldValue",
                  "type": "string",
                  "description": "Value of the field to set",
                  "default": ""
                }
              ]
            }
          ]
        },
        {
          "displayName": "Issue Type",
          "name": "issueType",
          "type": "string",
          "default": "",
          "description": "Issue Types"
        },
        {
          "displayName": "Label Names or IDs",
          "name": "labels",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getLabels"
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "cloud"
              ]
            }
          }
        },
        {
          "displayName": "Labels",
          "name": "serverLabels",
          "type": "string",
          "default": [],
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "server"
              ]
            }
          },
          "typeOptions": {
            "multipleValues": true
          }
        },
        {
          "displayName": "Parent Issue Key",
          "name": "parentIssueKey",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Priority",
          "name": "priority",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Priority",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Priority...",
              "typeOptions": {
                "searchListMethod": "getPriorities"
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "1",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([0-9]{1,})[ \t]*",
                    "errorMessage": "Not a valid Jira Priority ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9]{1,})"
              }
            }
          ]
        },
        {
          "displayName": "Reporter",
          "name": "reporter",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Reporter",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Reporter...",
              "typeOptions": {
                "searchListMethod": "getUsers",
                "searchable": true
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "62971ebae540870069668714",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([-:a-z0-9]{2,})[ \t]*",
                    "errorMessage": "Not a valid Jira Reporter ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([-:a-z0-9]{2,})"
              }
            }
          ]
        },
        {
          "displayName": "Summary",
          "name": "summary",
          "type": "string",
          "default": ""
        },
        {
          "displayName": "Status",
          "name": "statusId",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "Status",
              "name": "list",
              "type": "list",
              "placeholder": "Select a Status...",
              "typeOptions": {
                "searchListMethod": "getTransitions"
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "placeholder": "11",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "([0-9]{1,})[ \t]*",
                    "errorMessage": "Not a valid Jira Status ID"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "^([0-9]{1,})"
              }
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Delete Subtasks",
      "name": "deleteSubtasks",
      "type": "boolean",
      "default": false,
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Simplify",
      "name": "simplifyOutput",
      "type": "boolean",
      "default": false,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "string",
          "default": "",
          "description": "<p>Use expand to include additional information about the issues in the response. This parameter accepts a comma-separated list. Expand options include:\n\t\t\t\t<ul>\n\t\t\t\t\t<li><code>renderedFields</code> Returns field values rendered in HTML format.</li>\n\t\t\t\t\t<li><code>names</code> Returns the display name of each field.</li>\n\t\t\t\t\t<li><code>schema</code> Returns the schema describing a field type.</li>\n\t\t\t\t\t<li><code>transitions</code> Returns all possible transitions for the issue.</li>\n\t\t\t\t\t<li><code>editmeta</code> Returns information about how each field can be edited.</li>\n\t\t\t\t\t<li><code>changelog</code> Returns a list of recent updates to an issue, sorted by date, starting from the most recent.</li>\n\t\t\t\t\t<li><code>versionedRepresentations</code> Returns a JSON array for each version of a field's value, with the highest number representing the most recent version. Note: When included in the request, the fields parameter is ignored.</li>\n\t\t\t\t</ul>"
        },
        {
          "displayName": "Fields",
          "name": "fields",
          "type": "string",
          "default": "",
          "description": "A list of fields to return for the issue. This parameter accepts a comma-separated list. Use it to retrieve a subset of fields. Allowed values: <code>*all</code> Returns all fields. <code>*navigable</code> Returns navigable fields. Any issue field, prefixed with a minus to exclude."
        },
        {
          "displayName": "Fields By Key",
          "name": "fieldsByKey",
          "type": "boolean",
          "default": false,
          "description": "Whether fields in fields are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID."
        },
        {
          "displayName": "Properties",
          "name": "properties",
          "type": "string",
          "default": "",
          "description": "A list of issue properties to return for the issue. This parameter accepts a comma-separated list. Allowed values: <code>*all</code> Returns all issue properties. Any issue property key, prefixed with a minus to exclude. Examples: <code>*all</code> Returns all properties. <code>*all</code>,-prop1 Returns all properties except prop1. <code>prop1,prop2</code> Returns prop1 and prop2 properties. This parameter may be specified multiple times. For example, properties=prop1,prop2& properties=prop3."
        },
        {
          "displayName": "Update History",
          "name": "updateHistory",
          "type": "boolean",
          "default": false,
          "description": "Whether the project in which the issue is created is added to the user's Recently viewed project list, as shown under Projects in Jira. This also populates the JQL issues search lastViewed field."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "multiOptions",
          "default": [],
          "options": [
            {
              "name": "Changelog",
              "value": "changelog",
              "description": "Returns a list of recent updates to an issue, sorted by date, starting from the most recent"
            },
            {
              "name": "Editmeta",
              "value": "editmeta",
              "description": "Returns information about how each field can be edited"
            },
            {
              "name": "Names",
              "value": "names",
              "description": "Returns the display name of each field"
            },
            {
              "name": "Operations",
              "value": "operations",
              "description": "Returns all possible operations for the issue"
            },
            {
              "name": "Rendered Fields",
              "value": "renderedFields",
              "description": "Returns field values rendered in HTML format"
            },
            {
              "name": "Schema",
              "value": "schema",
              "description": "Returns the schema describing a field type"
            },
            {
              "name": "Transitions",
              "value": "transitions",
              "description": "Returns all possible transitions for the issue"
            },
            {
              "name": "Versioned Representations",
              "value": "versionedRepresentations",
              "description": "JSON array containing each version of a field's value"
            }
          ],
          "description": "Use expand to include additional information about issues in the response"
        },
        {
          "displayName": "Fields",
          "name": "fields",
          "type": "string",
          "default": "*navigable",
          "description": "A list of fields to return for each issue, use it to retrieve a subset of fields. This parameter accepts a comma-separated list. Expand options include: <code>*all</code> Returns all fields. <code>*navigable</code> Returns navigable fields. Any issue field, prefixed with a minus to exclude."
        },
        {
          "displayName": "Fields By Key",
          "name": "fieldsByKey",
          "type": "boolean",
          "default": false,
          "description": "Whether fields in fields are referenced by keys rather than IDs. This parameter is useful where fields have been added by a connect app and a field's key may differ from its ID."
        },
        {
          "displayName": "JQL",
          "name": "jql",
          "type": "string",
          "default": "",
          "description": "A JQL expression"
        }
      ],
      "displayOptions": {
        "show": {
          "operation": [
            "getAll"
          ],
          "resource": [
            "issue"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "changelog"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "changelog"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "changelog"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ]
        }
      }
    },
    {
      "displayName": "JSON Parameters",
      "name": "jsonParameters",
      "type": "boolean",
      "default": false,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "HTML Body",
          "name": "htmlBody",
          "type": "string",
          "default": "",
          "description": "The HTML body of the email notification for the issue"
        },
        {
          "displayName": "Subject",
          "name": "subject",
          "type": "string",
          "default": "",
          "description": "The subject of the email notification for the issue. If this is not specified, then the subject is set to the issue key and summary."
        },
        {
          "displayName": "Text Body",
          "name": "textBody",
          "type": "string",
          "default": "",
          "description": "The subject of the email notification for the issue. If this is not specified, then the subject is set to the issue key and summary."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ]
        }
      }
    },
    {
      "displayName": "Notification Recipients",
      "name": "notificationRecipientsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "The recipients of the email notification for the issue",
      "options": [
        {
          "name": "notificationRecipientsValues",
          "displayName": "Recipients",
          "values": [
            {
              "displayName": "Reporter",
              "name": "reporter",
              "type": "boolean",
              "description": "Whether the notification should be sent to the issue's reporter",
              "default": false
            },
            {
              "displayName": "Assignee",
              "name": "assignee",
              "type": "boolean",
              "default": false,
              "description": "Whether the notification should be sent to the issue's assignees"
            },
            {
              "displayName": "Watchers",
              "name": "watchers",
              "type": "boolean",
              "default": false,
              "description": "Whether the notification should be sent to the issue's assignees"
            },
            {
              "displayName": "Voters",
              "name": "voters",
              "type": "boolean",
              "default": false,
              "description": "Whether the notification should be sent to the issue's voters"
            },
            {
              "displayName": "User Names or IDs",
              "name": "users",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getUsers"
              },
              "default": [],
              "description": "List of users to receive the notification. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            },
            {
              "displayName": "Group Names or IDs",
              "name": "groups",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getGroups"
              },
              "default": [],
              "description": "List of groups to receive the notification. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ],
          "jsonParameters": [
            false
          ]
        }
      },
      "typeOptions": {
        "multipleValues": false
      }
    },
    {
      "displayName": "Notification Recipients",
      "name": "notificationRecipientsJson",
      "type": "json",
      "default": "",
      "description": "The recipients of the email notification for the issue",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ],
          "jsonParameters": [
            true
          ]
        }
      },
      "typeOptions": {
        "alwaysOpenEditWindow": true
      }
    },
    {
      "displayName": "Notification Recipients Restrictions",
      "name": "notificationRecipientsRestrictionsUi",
      "type": "fixedCollection",
      "default": {},
      "description": "Restricts the notifications to users with the specified permissions",
      "options": [
        {
          "name": "notificationRecipientsRestrictionsValues",
          "displayName": "Recipients Restrictions",
          "values": [
            {
              "displayName": "User Names or IDs",
              "name": "users",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getUsers"
              },
              "default": [],
              "description": "List of users to receive the notification. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            },
            {
              "displayName": "Group Names or IDs",
              "name": "groups",
              "type": "multiOptions",
              "typeOptions": {
                "loadOptionsMethod": "getGroups"
              },
              "default": [],
              "description": "List of groups to receive the notification. Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ],
          "jsonParameters": [
            false
          ]
        }
      },
      "typeOptions": {
        "multipleValues": false
      }
    },
    {
      "displayName": "Notification Recipients Restrictions",
      "name": "notificationRecipientsRestrictionsJson",
      "type": "json",
      "default": "",
      "description": "Restricts the notifications to users with the specified permissions",
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "notify"
          ],
          "jsonParameters": [
            true
          ]
        }
      },
      "typeOptions": {
        "alwaysOpenEditWindow": true
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "transitions"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "string",
          "default": "",
          "description": "Use expand to include additional information about transitions in the response. This parameter accepts transitions.fields, which returns information about the fields in the transition screen for each transition. Fields hidden from the screen are not returned. Use this information to populate the fields and update fields in Transition issue."
        },
        {
          "displayName": "Transition ID",
          "name": "transitionId",
          "type": "string",
          "default": "",
          "description": "The ID of the transition"
        },
        {
          "displayName": "Skip Remote Only Condition",
          "name": "skipRemoteOnlyCondition",
          "type": "boolean",
          "default": false,
          "description": "Whether transitions with the condition Hide From User Condition are included in the response"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issue"
          ],
          "operation": [
            "transitions"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "add",
      "options": [
        {
          "name": "Add",
          "value": "add",
          "description": "Add attachment to issue",
          "action": "Add an attachment to an issue"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get an attachment",
          "action": "Get an attachment from an issue"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many attachments",
          "action": "Get many issue attachments"
        },
        {
          "name": "Remove",
          "value": "remove",
          "description": "Remove an attachment",
          "action": "Remove an attachment from an issue"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "add"
          ]
        }
      }
    },
    {
      "displayName": "Input Binary Field",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "add"
          ]
        }
      }
    },
    {
      "displayName": "Attachment ID",
      "name": "attachmentId",
      "type": "string",
      "default": "",
      "description": "The ID of the attachment",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Download",
      "name": "download",
      "type": "boolean",
      "default": false,
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Put Output File in Field",
      "name": "binaryProperty",
      "type": "string",
      "default": "data",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "get"
          ],
          "download": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Download",
      "name": "download",
      "type": "boolean",
      "default": false,
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Put Output File in Field",
      "name": "binaryProperty",
      "type": "string",
      "default": "data",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "getAll"
          ],
          "download": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Attachment ID",
      "name": "attachmentId",
      "type": "string",
      "default": "",
      "description": "The ID of the attachment",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueAttachment"
          ],
          "operation": [
            "remove"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "add",
      "options": [
        {
          "name": "Add",
          "value": "add",
          "description": "Add comment to issue",
          "action": "Add a comment"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Get a comment",
          "action": "Get a comment"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many comments",
          "action": "Get many comments"
        },
        {
          "name": "Remove",
          "value": "remove",
          "description": "Remove a comment",
          "action": "Remove a comment"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a comment",
          "action": "Update a comment"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "description": "issueComment Key",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "add"
          ]
        }
      }
    },
    {
      "displayName": "JSON Parameters",
      "name": "jsonParameters",
      "type": "boolean",
      "default": false,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "add"
          ]
        }
      }
    },
    {
      "displayName": "Comment",
      "name": "comment",
      "type": "string",
      "default": "",
      "description": "Comment's text",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "add"
          ],
          "jsonParameters": [
            false
          ]
        }
      }
    },
    {
      "displayName": "Document Format (JSON)",
      "name": "commentJson",
      "type": "json",
      "default": "",
      "description": "The Atlassian Document Format (ADF). Online builder can be found <a href=\"https://developer.atlassian.com/cloud/jira/platform/apis/document/playground/\">here</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "add"
          ],
          "jsonParameters": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "options",
          "options": [
            {
              "name": "Rendered Body",
              "value": "renderedBody"
            }
          ],
          "default": [],
          "description": "Use expand to include additional information about comments in the response. This parameter accepts Rendered Body, which returns the comment body rendered in HTML."
        },
        {
          "displayName": "Use Wiki Markup",
          "name": "wikiMarkup",
          "type": "boolean",
          "default": false,
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "cloud"
              ]
            }
          },
          "description": "Whether to enable parsing of wikiformatting for this comment. Default is false."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "add"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "description": "The ID or key of the issue",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Comment ID",
      "name": "commentId",
      "type": "string",
      "default": "",
      "description": "The ID of the comment",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "options",
          "options": [
            {
              "name": "Rendered Body",
              "value": "renderedBody"
            }
          ],
          "default": "",
          "description": "Use expand to include additional information about comments in the response. This parameter accepts Rendered Body, which returns the comment body rendered in HTML."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "description": "The ID or key of the issue",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "getAll"
          ],
          "returnAll": [
            false
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "options",
          "options": [
            {
              "name": "Rendered Body",
              "value": "renderedBody"
            }
          ],
          "default": "renderedBody",
          "description": "Use expand to include additional information about comments in the response. This parameter accepts Rendered Body, which returns the comment body rendered in HTML."
        },
        {
          "displayName": "Order By",
          "name": "orderBy",
          "type": "options",
          "options": [
            {
              "name": "Created Ascending",
              "value": "+created"
            },
            {
              "name": "Created Descending",
              "value": "-created"
            }
          ],
          "default": "+created",
          "description": "Order comments by the created date"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "description": "The ID or key of the issue",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "remove"
          ]
        }
      }
    },
    {
      "displayName": "Comment ID",
      "name": "commentId",
      "type": "string",
      "default": "",
      "description": "The ID of the comment",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "remove"
          ]
        }
      }
    },
    {
      "displayName": "Issue Key",
      "name": "issueKey",
      "type": "string",
      "default": "",
      "description": "The Issue Comment key",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Comment ID",
      "name": "commentId",
      "type": "string",
      "default": "",
      "description": "The ID of the comment",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "JSON Parameters",
      "name": "jsonParameters",
      "type": "boolean",
      "default": false,
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Comment",
      "name": "comment",
      "type": "string",
      "default": "",
      "description": "Comment's text",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ],
          "jsonParameters": [
            false
          ]
        }
      }
    },
    {
      "displayName": "Document Format (JSON)",
      "name": "commentJson",
      "type": "json",
      "default": "",
      "description": "The Atlassian Document Format (ADF). Online builder can be found <a href=\"https://developer.atlassian.com/cloud/jira/platform/apis/document/playground/\">here</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ],
          "jsonParameters": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "options",
          "options": [
            {
              "name": "Rendered Body",
              "value": "renderedBody"
            }
          ],
          "default": "renderedBody",
          "description": "Use expand to include additional information about comments in the response. This parameter accepts Rendered Body, which returns the comment body rendered in HTML."
        },
        {
          "displayName": "Use Wiki Markup",
          "name": "wikiMarkup",
          "type": "boolean",
          "default": false,
          "displayOptions": {
            "show": {
              "/jiraVersion": [
                "cloud"
              ]
            }
          },
          "description": "Whether to enable parsing of wikiformatting for this comment. Default is false."
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "issueComment"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "default": "create",
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new user",
          "action": "Create a user"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a user",
          "action": "Delete a user"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a user",
          "action": "Get a user"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ]
        }
      },
      "noDataExpression": true
    },
    {
      "displayName": "Username",
      "name": "username",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Email Address",
      "name": "emailAddress",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Display Name",
      "name": "displayName",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Password",
          "name": "password",
          "type": "string",
          "default": "",
          "description": "Password for the user. If a password is not set, a random password is generated.",
          "typeOptions": {
            "password": true
          }
        },
        {
          "displayName": "Notification",
          "name": "notification",
          "type": "boolean",
          "default": false,
          "description": "Whether to send the user an email confirmation that they have been added to Jira"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Account ID",
      "name": "accountId",
      "type": "string",
      "default": "",
      "description": "Account ID of the user to delete",
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Account ID",
      "name": "accountId",
      "type": "string",
      "default": "",
      "description": "Account ID of the user to retrieve",
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "type": "collection",
      "default": {},
      "options": [
        {
          "displayName": "Expand",
          "name": "expand",
          "type": "multiOptions",
          "default": [],
          "description": "Include more information about the user",
          "options": [
            {
              "name": "Groups",
              "value": "groups",
              "description": "Include all groups to which the user belongs"
            },
            {
              "name": "Application Roles",
              "value": "applicationRoles",
              "description": "Include details of all the applications the user can access"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "user"
          ],
          "operation": [
            "get"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "changelog",
      "name": "Changelog",
      "description": "Get issue changelog"
    },
    {
      "operation": "create",
      "name": "Create",
      "description": "Create a new issue"
    },
    {
      "operation": "delete",
      "name": "Delete",
      "description": "Delete an issue"
    },
    {
      "operation": "get",
      "name": "Get",
      "description": "Get an issue"
    },
    {
      "operation": "getAll",
      "name": "Get Many",
      "description": "Get many issues"
    },
    {
      "operation": "notify",
      "name": "Notify",
      "description": "Create an email notification for an issue and add it to the mail queue"
    },
    {
      "operation": "transitions",
      "name": "Status",
      "description": "Return either all transitions or a transition that can be performed by the user on an issue, based on the issue's status"
    },
    {
      "operation": "update",
      "name": "Update",
      "description": "Update an issue"
    }
  ],
  "credentials_required": [
    {
      "name": "jiraSoftwareCloudApi",
      "required": true,
      "displayOptions": {
        "show": {
          "jiraVersion": [
            "cloud"
          ]
        }
      }
    },
    {
      "name": "jiraSoftwareServerApi",
      "required": true,
      "displayOptions": {
        "show": {
          "jiraVersion": [
            "server"
          ]
        }
      }
    },
    {
      "name": "jiraSoftwareServerPatApi",
      "required": true,
      "displayOptions": {
        "show": {
          "jiraVersion": [
            "serverPat"
          ]
        }
      }
    }
  ],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}