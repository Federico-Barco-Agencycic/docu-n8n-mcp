{
  "node_type": "nodes-base.crypto",
  "package_name": "n8n-nodes-base",
  "display_name": "Crypto",
  "description": "Provide cryptographic utilities",
  "category": "transform",
  "development_style": "programmatic",
  "is_ai_tool": 1,
  "is_trigger": 0,
  "is_webhook": 0,
  "is_versioned": 0,
  "version": "1",
  "documentation": "---\n#https://www.notion.so/n8n/Frontmatter-432c2b8dff1f43d4b1c8d20075510fe4\ntitle: Crypto\ndescription: Documentation for the Crypto node in n8n, a workflow automation platform. Includes guidance on usage, and links to examples.\ncontentType: [integration, reference]\npriority: medium\n---\n\n# Crypto\n\nUse the Crypto node to encrypt data in workflows.\n\n## Actions\n\n* [**Generate** a random string](#generate-parameters)\n* [**Hash** a text or file](#hash-parameters) in a specified format\n* [**Hmac** a text or file](#hmac-parameters) in a specified format\n* [**Sign** a string](#sign-parameters) using a private key\n\n## Node parameters\n\n--8<-- \"_snippets/integrations/builtin/app-nodes/ai-tools.md\"\n\nNode parameters depend on the action you select.\n\n### Generate parameters\n\n* **Property Name**: Enter the name of the property to write the random string to.\n* **Type**: Select the encoding type to use to generate the string. Choose from:\n\t* **ASCII**\n\t* **BASE64**\n\t* **HEX**\n\t* **UUID**\n\n### Hash parameters\n\n* **Type**: Select the hash type to use. Choose from:\n\t* **MD5**\n\t* **SHA256**\n\t* **SHA3-256**\n\t* **SHA3-384**\n\t* **SHA3-512**\n\t* **SHA385**\n\t* **SHA512**\n* **Binary File**: Turn this parameter on if the data you want to hash is from a binary file.\n\t* **Value**: If you turn off **Binary File**, enter the value you want to hash.\n\t* **Binary Property Name**: If you turn on **Binary File**, enter the name of the binary property that contains the data you want to hash.\n* **Property Name**: Enter the name of the property you want to write the hash to.\n* **Encoding**: Select the encoding type to use. Choose from:\n\t* **BASE64**\n\t* **HEX**\n\n### Hmac parameters\n\n* **Binary File**: Turn this parameter on if the data you want to encrypt is from a binary file.\n\t* **Value**: If you turn off **Binary File**, enter the value you want to encrypt.\n\t* **Binary Property Name**: If you turn on **Binary File**, enter the name of the binary property that contains the data you want to encrypt.\n* **Type**: Select the encryption type to use. Choose from:\n\t* **MD5**\n\t* **SHA256**\n\t* **SHA3-256**\n\t* **SHA3-384**\n\t* **SHA3-512**\n\t* **SHA385**\n\t* **SHA512**\n* **Property Name**: Enter the name of the property you want to write the hash to.\n* **Secret**: Enter the secret or secret key used for decoding.\n* **Encoding**: Select the encoding type to use. Choose from:\n\t* **BASE64**\n\t* **HEX**\n\n### Sign parameters\n\n* **Value**: Enter the value you want to sign.\n* **Property Name**: Enter the name of the property you want to write the signed value to.\n* **Algorithm Name or ID**: Choose an algorithm name from the list or specify an ID using an [expression](/code/expressions.md).\n* **Encoding**: Select the encoding type to use. Choose from:\n\t* **BASE64**\n\t* **HEX**\n* **Private Key**: Enter a private key to use when signing the string.\n\n## Templates and examples\n\n<!-- see https://www.notion.so/n8n/Pull-in-templates-for-the-integrations-pages-37c716837b804d30a33b47475f6e3780 -->\n[[ templatesWidget(page.title, 'crypto') ]]\n",
  "properties_schema": [
    {
      "displayName": "Action",
      "name": "action",
      "type": "options",
      "default": "hash",
      "options": [
        {
          "name": "Generate",
          "description": "Generate random string",
          "value": "generate",
          "action": "Generate random string"
        },
        {
          "name": "Hash",
          "description": "Hash a text or file in a specified format",
          "value": "hash",
          "action": "Hash a text or file in a specified format"
        },
        {
          "name": "Hmac",
          "description": "Hmac a text or file in a specified format",
          "value": "hmac",
          "action": "HMAC a text or file in a specified format"
        },
        {
          "name": "Sign",
          "description": "Sign a string using a private key",
          "value": "sign",
          "action": "Sign a string using a private key"
        }
      ]
    },
    {
      "displayName": "Type",
      "name": "type",
      "type": "options",
      "default": "MD5",
      "description": "The hash type to use",
      "options": [
        {
          "name": "MD5",
          "value": "MD5"
        },
        {
          "name": "SHA256",
          "value": "SHA256"
        },
        {
          "name": "SHA3-256",
          "value": "SHA3-256"
        },
        {
          "name": "SHA3-384",
          "value": "SHA3-384"
        },
        {
          "name": "SHA3-512",
          "value": "SHA3-512"
        },
        {
          "name": "SHA384",
          "value": "SHA384"
        },
        {
          "name": "SHA512",
          "value": "SHA512"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash"
          ]
        }
      }
    },
    {
      "displayName": "Binary File",
      "name": "binaryData",
      "type": "boolean",
      "default": false,
      "description": "Whether the data to hashed should be taken from binary field",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash",
            "hmac"
          ]
        }
      }
    },
    {
      "displayName": "Binary Property Name",
      "name": "binaryPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the binary property which contains the input data",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash",
            "hmac"
          ],
          "binaryData": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Value",
      "name": "value",
      "type": "string",
      "default": "",
      "description": "The value that should be hashed",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "dataPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the property to which to write the hash",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash"
          ]
        }
      }
    },
    {
      "displayName": "Encoding",
      "name": "encoding",
      "type": "options",
      "default": "hex",
      "options": [
        {
          "name": "BASE64",
          "value": "base64"
        },
        {
          "name": "HEX",
          "value": "hex"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hash"
          ]
        }
      }
    },
    {
      "displayName": "Type",
      "name": "type",
      "type": "options",
      "default": "MD5",
      "description": "The hash type to use",
      "options": [
        {
          "name": "MD5",
          "value": "MD5"
        },
        {
          "name": "SHA256",
          "value": "SHA256"
        },
        {
          "name": "SHA3-256",
          "value": "SHA3-256"
        },
        {
          "name": "SHA3-384",
          "value": "SHA3-384"
        },
        {
          "name": "SHA3-512",
          "value": "SHA3-512"
        },
        {
          "name": "SHA384",
          "value": "SHA384"
        },
        {
          "name": "SHA512",
          "value": "SHA512"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hmac"
          ]
        }
      }
    },
    {
      "displayName": "Value",
      "name": "value",
      "type": "string",
      "default": "",
      "description": "The value of which the hmac should be created",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hmac"
          ],
          "binaryData": [
            false
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "dataPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the property to which to write the hmac",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hmac"
          ]
        }
      }
    },
    {
      "displayName": "Secret",
      "name": "secret",
      "type": "string",
      "default": "",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hmac"
          ]
        }
      },
      "typeOptions": {
        "password": true
      }
    },
    {
      "displayName": "Encoding",
      "name": "encoding",
      "type": "options",
      "default": "hex",
      "options": [
        {
          "name": "BASE64",
          "value": "base64"
        },
        {
          "name": "HEX",
          "value": "hex"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "hmac"
          ]
        }
      }
    },
    {
      "displayName": "Value",
      "name": "value",
      "type": "string",
      "default": "",
      "description": "The value that should be signed",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "sign"
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "dataPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the property to which to write the signed value",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "sign"
          ]
        }
      }
    },
    {
      "displayName": "Algorithm Name or ID",
      "name": "algorithm",
      "type": "options",
      "default": "",
      "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>",
      "options": [
        {
          "name": "RSA-MD5",
          "value": "RSA-MD5"
        },
        {
          "name": "RSA-RIPEMD160",
          "value": "RSA-RIPEMD160"
        },
        {
          "name": "RSA-SHA1",
          "value": "RSA-SHA1"
        },
        {
          "name": "RSA-SHA1-2",
          "value": "RSA-SHA1-2"
        },
        {
          "name": "RSA-SHA224",
          "value": "RSA-SHA224"
        },
        {
          "name": "RSA-SHA256",
          "value": "RSA-SHA256"
        },
        {
          "name": "RSA-SHA3-224",
          "value": "RSA-SHA3-224"
        },
        {
          "name": "RSA-SHA3-256",
          "value": "RSA-SHA3-256"
        },
        {
          "name": "RSA-SHA3-384",
          "value": "RSA-SHA3-384"
        },
        {
          "name": "RSA-SHA3-512",
          "value": "RSA-SHA3-512"
        },
        {
          "name": "RSA-SHA384",
          "value": "RSA-SHA384"
        },
        {
          "name": "RSA-SHA512",
          "value": "RSA-SHA512"
        },
        {
          "name": "RSA-SHA512/224",
          "value": "RSA-SHA512/224"
        },
        {
          "name": "RSA-SHA512/256",
          "value": "RSA-SHA512/256"
        },
        {
          "name": "RSA-SM3",
          "value": "RSA-SM3"
        },
        {
          "name": "blake2b512",
          "value": "blake2b512"
        },
        {
          "name": "blake2s256",
          "value": "blake2s256"
        },
        {
          "name": "id-rsassa-pkcs1-v1_5-with-sha3-224",
          "value": "id-rsassa-pkcs1-v1_5-with-sha3-224"
        },
        {
          "name": "id-rsassa-pkcs1-v1_5-with-sha3-256",
          "value": "id-rsassa-pkcs1-v1_5-with-sha3-256"
        },
        {
          "name": "id-rsassa-pkcs1-v1_5-with-sha3-384",
          "value": "id-rsassa-pkcs1-v1_5-with-sha3-384"
        },
        {
          "name": "id-rsassa-pkcs1-v1_5-with-sha3-512",
          "value": "id-rsassa-pkcs1-v1_5-with-sha3-512"
        },
        {
          "name": "md5",
          "value": "md5"
        },
        {
          "name": "md5-sha1",
          "value": "md5-sha1"
        },
        {
          "name": "md5WithRSAEncryption",
          "value": "md5WithRSAEncryption"
        },
        {
          "name": "ripemd",
          "value": "ripemd"
        },
        {
          "name": "ripemd160",
          "value": "ripemd160"
        },
        {
          "name": "ripemd160WithRSA",
          "value": "ripemd160WithRSA"
        },
        {
          "name": "rmd160",
          "value": "rmd160"
        },
        {
          "name": "sha1",
          "value": "sha1"
        },
        {
          "name": "sha1WithRSAEncryption",
          "value": "sha1WithRSAEncryption"
        },
        {
          "name": "sha224",
          "value": "sha224"
        },
        {
          "name": "sha224WithRSAEncryption",
          "value": "sha224WithRSAEncryption"
        },
        {
          "name": "sha256",
          "value": "sha256"
        },
        {
          "name": "sha256WithRSAEncryption",
          "value": "sha256WithRSAEncryption"
        },
        {
          "name": "sha3-224",
          "value": "sha3-224"
        },
        {
          "name": "sha3-256",
          "value": "sha3-256"
        },
        {
          "name": "sha3-384",
          "value": "sha3-384"
        },
        {
          "name": "sha3-512",
          "value": "sha3-512"
        },
        {
          "name": "sha384",
          "value": "sha384"
        },
        {
          "name": "sha384WithRSAEncryption",
          "value": "sha384WithRSAEncryption"
        },
        {
          "name": "sha512",
          "value": "sha512"
        },
        {
          "name": "sha512-224",
          "value": "sha512-224"
        },
        {
          "name": "sha512-224WithRSAEncryption",
          "value": "sha512-224WithRSAEncryption"
        },
        {
          "name": "sha512-256",
          "value": "sha512-256"
        },
        {
          "name": "sha512-256WithRSAEncryption",
          "value": "sha512-256WithRSAEncryption"
        },
        {
          "name": "sha512WithRSAEncryption",
          "value": "sha512WithRSAEncryption"
        },
        {
          "name": "shake128",
          "value": "shake128"
        },
        {
          "name": "shake256",
          "value": "shake256"
        },
        {
          "name": "sm3",
          "value": "sm3"
        },
        {
          "name": "sm3WithRSAEncryption",
          "value": "sm3WithRSAEncryption"
        },
        {
          "name": "ssl3-md5",
          "value": "ssl3-md5"
        },
        {
          "name": "ssl3-sha1",
          "value": "ssl3-sha1"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "sign"
          ]
        }
      }
    },
    {
      "displayName": "Encoding",
      "name": "encoding",
      "type": "options",
      "default": "hex",
      "options": [
        {
          "name": "BASE64",
          "value": "base64"
        },
        {
          "name": "HEX",
          "value": "hex"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "sign"
          ]
        }
      }
    },
    {
      "displayName": "Private Key",
      "name": "privateKey",
      "type": "string",
      "default": "",
      "description": "Private key to use when signing the string",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "sign"
          ]
        }
      }
    },
    {
      "displayName": "Property Name",
      "name": "dataPropertyName",
      "type": "string",
      "default": "data",
      "description": "Name of the property to which to write the random string",
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "generate"
          ]
        }
      }
    },
    {
      "displayName": "Type",
      "name": "encodingType",
      "type": "options",
      "default": "uuid",
      "description": "Encoding that will be used to generate string",
      "options": [
        {
          "name": "ASCII",
          "value": "ascii"
        },
        {
          "name": "BASE64",
          "value": "base64"
        },
        {
          "name": "HEX",
          "value": "hex"
        },
        {
          "name": "UUID",
          "value": "uuid"
        }
      ],
      "required": true,
      "displayOptions": {
        "show": {
          "action": [
            "generate"
          ]
        }
      }
    },
    {
      "displayName": "Length",
      "name": "stringLength",
      "type": "number",
      "default": 32,
      "description": "Length of the generated string",
      "displayOptions": {
        "show": {
          "action": [
            "generate"
          ],
          "encodingType": [
            "ascii",
            "base64",
            "hex"
          ]
        }
      }
    }
  ],
  "operations": [
    {
      "operation": "generate",
      "name": "Generate",
      "description": "Generate random string"
    },
    {
      "operation": "hash",
      "name": "Hash",
      "description": "Hash a text or file in a specified format"
    },
    {
      "operation": "hmac",
      "name": "Hmac",
      "description": "Hmac a text or file in a specified format"
    },
    {
      "operation": "sign",
      "name": "Sign",
      "description": "Sign a string using a private key"
    }
  ],
  "credentials_required": [],
  "updated_at": "2025-07-06 13:14:51",
  "generated_at": "2025-07-23T03:58:15.685Z",
  "api_version": "1.0.0"
}